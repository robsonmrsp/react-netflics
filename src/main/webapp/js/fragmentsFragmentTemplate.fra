
	
	############################################################################
				Configuração do beans.xml referente aos novos serviços.
	############################################################################
	<jaxrs:server id="services" address="/">
		<jaxrs:serviceBeans>
				<bean class="br.com.sints.app.rs.LinguagemResources" />
		<bean class="br.com.sints.app.rs.AvaliacaoResources" />
		<bean class="br.com.sints.app.rs.AssinanteResources" />
		<bean class="br.com.sints.app.rs.GeneroResources" />
		<bean class="br.com.sints.app.rs.CriticoResources" />
		<bean class="br.com.sints.app.rs.FilmeResources" />
		<bean class="br.com.sints.app.rs.VisualizacaoResources" />
		<bean class="br.com.sints.app.rs.ClassificacaoResources" />
		<bean class="br.com.sints.app.rs.AtorResources" />
		<bean class="br.com.sints.app.rs.UserResources" />
		<bean class="br.com.sints.app.rs.RoleResources" />
		<bean class="br.com.sints.app.rs.PermissionResources" />
		<bean class="br.com.sints.app.rs.GroupResources" />
		<bean class="br.com.sints.app.rs.ItemResources" />
		</jaxrs:serviceBeans>
		<jaxrs:providers>
			<bean class="org.codehaus.jackson.jaxrs.JacksonJsonProvider" />
		</jaxrs:providers>
	</jaxrs:server>
	
	
	############################################################################
						Router para as entidades criadas
	############################################################################

		var PageLinguagem = require('views/linguagem/PageLinguagem');
		var FormLinguagem = require('views/linguagem/FormLinguagem');
		var LinguagemModel = require('models/LinguagemModel');
		var PageAvaliacao = require('views/avaliacao/PageAvaliacao');
		var FormAvaliacao = require('views/avaliacao/FormAvaliacao');
		var AvaliacaoModel = require('models/AvaliacaoModel');
		var PageAssinante = require('views/assinante/PageAssinante');
		var FormAssinante = require('views/assinante/FormAssinante');
		var AssinanteModel = require('models/AssinanteModel');
		var PageGenero = require('views/genero/PageGenero');
		var FormGenero = require('views/genero/FormGenero');
		var GeneroModel = require('models/GeneroModel');
		var PageCritico = require('views/critico/PageCritico');
		var FormCritico = require('views/critico/FormCritico');
		var CriticoModel = require('models/CriticoModel');
		var PageFilme = require('views/filme/PageFilme');
		var FormFilme = require('views/filme/FormFilme');
		var FilmeModel = require('models/FilmeModel');
		var PageVisualizacao = require('views/visualizacao/PageVisualizacao');
		var FormVisualizacao = require('views/visualizacao/FormVisualizacao');
		var VisualizacaoModel = require('models/VisualizacaoModel');
		var PageClassificacao = require('views/classificacao/PageClassificacao');
		var FormClassificacao = require('views/classificacao/FormClassificacao');
		var ClassificacaoModel = require('models/ClassificacaoModel');
		var PageAtor = require('views/ator/PageAtor');
		var FormAtor = require('views/ator/FormAtor');
		var AtorModel = require('models/AtorModel');
		var PageUser = require('views/user/PageUser');
		var FormUser = require('views/user/FormUser');
		var UserModel = require('models/UserModel');
		var PageRole = require('views/role/PageRole');
		var FormRole = require('views/role/FormRole');
		var RoleModel = require('models/RoleModel');
		var PagePermission = require('views/permission/PagePermission');
		var FormPermission = require('views/permission/FormPermission');
		var PermissionModel = require('models/PermissionModel');
		var PageGroup = require('views/group/PageGroup');
		var FormGroup = require('views/group/FormGroup');
		var GroupModel = require('models/GroupModel');
		var PageItem = require('views/item/PageItem');
		var FormItem = require('views/item/FormItem');
		var ItemModel = require('models/ItemModel');
	
			// hashs de Linguagem
			'app/linguagems' : 'linguagems',
			'app/newLinguagem' : 'newLinguagem',
			'app/editLinguagem/:id' : 'editLinguagem',
			// hashs de Avaliacao
			'app/avaliacaos' : 'avaliacaos',
			'app/newAvaliacao' : 'newAvaliacao',
			'app/editAvaliacao/:id' : 'editAvaliacao',
			// hashs de Assinante
			'app/assinantes' : 'assinantes',
			'app/newAssinante' : 'newAssinante',
			'app/editAssinante/:id' : 'editAssinante',
			// hashs de Genero
			'app/generos' : 'generos',
			'app/newGenero' : 'newGenero',
			'app/editGenero/:id' : 'editGenero',
			// hashs de Critico
			'app/criticos' : 'criticos',
			'app/newCritico' : 'newCritico',
			'app/editCritico/:id' : 'editCritico',
			// hashs de Filme
			'app/filmes' : 'filmes',
			'app/newFilme' : 'newFilme',
			'app/editFilme/:id' : 'editFilme',
			// hashs de Visualizacao
			'app/visualizacaos' : 'visualizacaos',
			'app/newVisualizacao' : 'newVisualizacao',
			'app/editVisualizacao/:id' : 'editVisualizacao',
			// hashs de Classificacao
			'app/classificacaos' : 'classificacaos',
			'app/newClassificacao' : 'newClassificacao',
			'app/editClassificacao/:id' : 'editClassificacao',
			// hashs de Ator
			'app/ators' : 'ators',
			'app/newAtor' : 'newAtor',
			'app/editAtor/:id' : 'editAtor',
			// hashs de User
			'app/users' : 'users',
			'app/newUser' : 'newUser',
			'app/editUser/:id' : 'editUser',
			// hashs de Role
			'app/roles' : 'roles',
			'app/newRole' : 'newRole',
			'app/editRole/:id' : 'editRole',
			// hashs de Permission
			'app/permissions' : 'permissions',
			'app/newPermission' : 'newPermission',
			'app/editPermission/:id' : 'editPermission',
			// hashs de Group
			'app/groups' : 'groups',
			'app/newGroup' : 'newGroup',
			'app/editGroup/:id' : 'editGroup',
			// hashs de Item
			'app/items' : 'items',
			'app/newItem' : 'newItem',
			'app/editItem/:id' : 'editItem',
			
			//configuração das rotas de Linguagem
			appRouter.on('route:linguagems', function() {
				util.markActiveItem('linguagems');
				appRouter.pageLinguagem = new PageLinguagem();
				App.mainRegion.show(appRouter.pageLinguagem);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Linguagem',
					itemSubFolderName : 'Grid',
					url : 'app/linguagems'
				});
			});
	
			appRouter.on('route:newLinguagem', function() {
				util.markActiveItem('linguagems');
				var formLinguagem = new FormLinguagem({
					model : new LinguagemModel(),
				});
				App.mainRegion.show(formLinguagem);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Linguagem',
					itemSubFolderName : 'Formulário de cadastro',
					url : 'app/linguagems'
				});
			});
			
			appRouter.on('route:editLinguagem', function(idLinguagem) {
				util.markActiveItem('linguagems');
				var formLinguagem = null;
				if (appRouter.pageLinguagem) {
					formLinguagem = new FormLinguagem({
						model : appRouter.pageLinguagem.linguagems.get(idLinguagem),
					});
					App.mainRegion.show(formLinguagem);
				} else {
					var model = new LinguagemModel({
						id : idLinguagem,
					})
					model.fetch({
						success : function(model) {
							formLinguagem = new FormLinguagem({
								model : model,
							});
							App.mainRegion.show(formLinguagem);
						},
						error : function(x, y, z) {
							console.error(x, y, z);
						}
					})
					util.breadcrumb({
						iconClass : 'fa-calendar',
						itemLabel : 'Linguagemos',
						itemSubFolderName : 'Formulário de atualização',
						url : 'app/linguagems'
					});
				}
			});
			//configuração das rotas de Avaliacao
			appRouter.on('route:avaliacaos', function() {
				util.markActiveItem('avaliacaos');
				appRouter.pageAvaliacao = new PageAvaliacao();
				App.mainRegion.show(appRouter.pageAvaliacao);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Avaliacao',
					itemSubFolderName : 'Grid',
					url : 'app/avaliacaos'
				});
			});
	
			appRouter.on('route:newAvaliacao', function() {
				util.markActiveItem('avaliacaos');
				var formAvaliacao = new FormAvaliacao({
					model : new AvaliacaoModel(),
				});
				App.mainRegion.show(formAvaliacao);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Avaliacao',
					itemSubFolderName : 'Formulário de cadastro',
					url : 'app/avaliacaos'
				});
			});
			
			appRouter.on('route:editAvaliacao', function(idAvaliacao) {
				util.markActiveItem('avaliacaos');
				var formAvaliacao = null;
				if (appRouter.pageAvaliacao) {
					formAvaliacao = new FormAvaliacao({
						model : appRouter.pageAvaliacao.avaliacaos.get(idAvaliacao),
					});
					App.mainRegion.show(formAvaliacao);
				} else {
					var model = new AvaliacaoModel({
						id : idAvaliacao,
					})
					model.fetch({
						success : function(model) {
							formAvaliacao = new FormAvaliacao({
								model : model,
							});
							App.mainRegion.show(formAvaliacao);
						},
						error : function(x, y, z) {
							console.error(x, y, z);
						}
					})
					util.breadcrumb({
						iconClass : 'fa-calendar',
						itemLabel : 'Avaliacaoos',
						itemSubFolderName : 'Formulário de atualização',
						url : 'app/avaliacaos'
					});
				}
			});
			//configuração das rotas de Assinante
			appRouter.on('route:assinantes', function() {
				util.markActiveItem('assinantes');
				appRouter.pageAssinante = new PageAssinante();
				App.mainRegion.show(appRouter.pageAssinante);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Assinante',
					itemSubFolderName : 'Grid',
					url : 'app/assinantes'
				});
			});
	
			appRouter.on('route:newAssinante', function() {
				util.markActiveItem('assinantes');
				var formAssinante = new FormAssinante({
					model : new AssinanteModel(),
				});
				App.mainRegion.show(formAssinante);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Assinante',
					itemSubFolderName : 'Formulário de cadastro',
					url : 'app/assinantes'
				});
			});
			
			appRouter.on('route:editAssinante', function(idAssinante) {
				util.markActiveItem('assinantes');
				var formAssinante = null;
				if (appRouter.pageAssinante) {
					formAssinante = new FormAssinante({
						model : appRouter.pageAssinante.assinantes.get(idAssinante),
					});
					App.mainRegion.show(formAssinante);
				} else {
					var model = new AssinanteModel({
						id : idAssinante,
					})
					model.fetch({
						success : function(model) {
							formAssinante = new FormAssinante({
								model : model,
							});
							App.mainRegion.show(formAssinante);
						},
						error : function(x, y, z) {
							console.error(x, y, z);
						}
					})
					util.breadcrumb({
						iconClass : 'fa-calendar',
						itemLabel : 'Assinanteos',
						itemSubFolderName : 'Formulário de atualização',
						url : 'app/assinantes'
					});
				}
			});
			//configuração das rotas de Genero
			appRouter.on('route:generos', function() {
				util.markActiveItem('generos');
				appRouter.pageGenero = new PageGenero();
				App.mainRegion.show(appRouter.pageGenero);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Genero',
					itemSubFolderName : 'Grid',
					url : 'app/generos'
				});
			});
	
			appRouter.on('route:newGenero', function() {
				util.markActiveItem('generos');
				var formGenero = new FormGenero({
					model : new GeneroModel(),
				});
				App.mainRegion.show(formGenero);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Genero',
					itemSubFolderName : 'Formulário de cadastro',
					url : 'app/generos'
				});
			});
			
			appRouter.on('route:editGenero', function(idGenero) {
				util.markActiveItem('generos');
				var formGenero = null;
				if (appRouter.pageGenero) {
					formGenero = new FormGenero({
						model : appRouter.pageGenero.generos.get(idGenero),
					});
					App.mainRegion.show(formGenero);
				} else {
					var model = new GeneroModel({
						id : idGenero,
					})
					model.fetch({
						success : function(model) {
							formGenero = new FormGenero({
								model : model,
							});
							App.mainRegion.show(formGenero);
						},
						error : function(x, y, z) {
							console.error(x, y, z);
						}
					})
					util.breadcrumb({
						iconClass : 'fa-calendar',
						itemLabel : 'Generoos',
						itemSubFolderName : 'Formulário de atualização',
						url : 'app/generos'
					});
				}
			});
			//configuração das rotas de Critico
			appRouter.on('route:criticos', function() {
				util.markActiveItem('criticos');
				appRouter.pageCritico = new PageCritico();
				App.mainRegion.show(appRouter.pageCritico);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Critico',
					itemSubFolderName : 'Grid',
					url : 'app/criticos'
				});
			});
	
			appRouter.on('route:newCritico', function() {
				util.markActiveItem('criticos');
				var formCritico = new FormCritico({
					model : new CriticoModel(),
				});
				App.mainRegion.show(formCritico);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Critico',
					itemSubFolderName : 'Formulário de cadastro',
					url : 'app/criticos'
				});
			});
			
			appRouter.on('route:editCritico', function(idCritico) {
				util.markActiveItem('criticos');
				var formCritico = null;
				if (appRouter.pageCritico) {
					formCritico = new FormCritico({
						model : appRouter.pageCritico.criticos.get(idCritico),
					});
					App.mainRegion.show(formCritico);
				} else {
					var model = new CriticoModel({
						id : idCritico,
					})
					model.fetch({
						success : function(model) {
							formCritico = new FormCritico({
								model : model,
							});
							App.mainRegion.show(formCritico);
						},
						error : function(x, y, z) {
							console.error(x, y, z);
						}
					})
					util.breadcrumb({
						iconClass : 'fa-calendar',
						itemLabel : 'Criticoos',
						itemSubFolderName : 'Formulário de atualização',
						url : 'app/criticos'
					});
				}
			});
			//configuração das rotas de Filme
			appRouter.on('route:filmes', function() {
				util.markActiveItem('filmes');
				appRouter.pageFilme = new PageFilme();
				App.mainRegion.show(appRouter.pageFilme);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Filme',
					itemSubFolderName : 'Grid',
					url : 'app/filmes'
				});
			});
	
			appRouter.on('route:newFilme', function() {
				util.markActiveItem('filmes');
				var formFilme = new FormFilme({
					model : new FilmeModel(),
				});
				App.mainRegion.show(formFilme);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Filme',
					itemSubFolderName : 'Formulário de cadastro',
					url : 'app/filmes'
				});
			});
			
			appRouter.on('route:editFilme', function(idFilme) {
				util.markActiveItem('filmes');
				var formFilme = null;
				if (appRouter.pageFilme) {
					formFilme = new FormFilme({
						model : appRouter.pageFilme.filmes.get(idFilme),
					});
					App.mainRegion.show(formFilme);
				} else {
					var model = new FilmeModel({
						id : idFilme,
					})
					model.fetch({
						success : function(model) {
							formFilme = new FormFilme({
								model : model,
							});
							App.mainRegion.show(formFilme);
						},
						error : function(x, y, z) {
							console.error(x, y, z);
						}
					})
					util.breadcrumb({
						iconClass : 'fa-calendar',
						itemLabel : 'Filmeos',
						itemSubFolderName : 'Formulário de atualização',
						url : 'app/filmes'
					});
				}
			});
			//configuração das rotas de Visualizacao
			appRouter.on('route:visualizacaos', function() {
				util.markActiveItem('visualizacaos');
				appRouter.pageVisualizacao = new PageVisualizacao();
				App.mainRegion.show(appRouter.pageVisualizacao);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Visualizacao',
					itemSubFolderName : 'Grid',
					url : 'app/visualizacaos'
				});
			});
	
			appRouter.on('route:newVisualizacao', function() {
				util.markActiveItem('visualizacaos');
				var formVisualizacao = new FormVisualizacao({
					model : new VisualizacaoModel(),
				});
				App.mainRegion.show(formVisualizacao);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Visualizacao',
					itemSubFolderName : 'Formulário de cadastro',
					url : 'app/visualizacaos'
				});
			});
			
			appRouter.on('route:editVisualizacao', function(idVisualizacao) {
				util.markActiveItem('visualizacaos');
				var formVisualizacao = null;
				if (appRouter.pageVisualizacao) {
					formVisualizacao = new FormVisualizacao({
						model : appRouter.pageVisualizacao.visualizacaos.get(idVisualizacao),
					});
					App.mainRegion.show(formVisualizacao);
				} else {
					var model = new VisualizacaoModel({
						id : idVisualizacao,
					})
					model.fetch({
						success : function(model) {
							formVisualizacao = new FormVisualizacao({
								model : model,
							});
							App.mainRegion.show(formVisualizacao);
						},
						error : function(x, y, z) {
							console.error(x, y, z);
						}
					})
					util.breadcrumb({
						iconClass : 'fa-calendar',
						itemLabel : 'Visualizacaoos',
						itemSubFolderName : 'Formulário de atualização',
						url : 'app/visualizacaos'
					});
				}
			});
			//configuração das rotas de Classificacao
			appRouter.on('route:classificacaos', function() {
				util.markActiveItem('classificacaos');
				appRouter.pageClassificacao = new PageClassificacao();
				App.mainRegion.show(appRouter.pageClassificacao);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Classificacao',
					itemSubFolderName : 'Grid',
					url : 'app/classificacaos'
				});
			});
	
			appRouter.on('route:newClassificacao', function() {
				util.markActiveItem('classificacaos');
				var formClassificacao = new FormClassificacao({
					model : new ClassificacaoModel(),
				});
				App.mainRegion.show(formClassificacao);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Classificacao',
					itemSubFolderName : 'Formulário de cadastro',
					url : 'app/classificacaos'
				});
			});
			
			appRouter.on('route:editClassificacao', function(idClassificacao) {
				util.markActiveItem('classificacaos');
				var formClassificacao = null;
				if (appRouter.pageClassificacao) {
					formClassificacao = new FormClassificacao({
						model : appRouter.pageClassificacao.classificacaos.get(idClassificacao),
					});
					App.mainRegion.show(formClassificacao);
				} else {
					var model = new ClassificacaoModel({
						id : idClassificacao,
					})
					model.fetch({
						success : function(model) {
							formClassificacao = new FormClassificacao({
								model : model,
							});
							App.mainRegion.show(formClassificacao);
						},
						error : function(x, y, z) {
							console.error(x, y, z);
						}
					})
					util.breadcrumb({
						iconClass : 'fa-calendar',
						itemLabel : 'Classificacaoos',
						itemSubFolderName : 'Formulário de atualização',
						url : 'app/classificacaos'
					});
				}
			});
			//configuração das rotas de Ator
			appRouter.on('route:ators', function() {
				util.markActiveItem('ators');
				appRouter.pageAtor = new PageAtor();
				App.mainRegion.show(appRouter.pageAtor);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Ator',
					itemSubFolderName : 'Grid',
					url : 'app/ators'
				});
			});
	
			appRouter.on('route:newAtor', function() {
				util.markActiveItem('ators');
				var formAtor = new FormAtor({
					model : new AtorModel(),
				});
				App.mainRegion.show(formAtor);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Ator',
					itemSubFolderName : 'Formulário de cadastro',
					url : 'app/ators'
				});
			});
			
			appRouter.on('route:editAtor', function(idAtor) {
				util.markActiveItem('ators');
				var formAtor = null;
				if (appRouter.pageAtor) {
					formAtor = new FormAtor({
						model : appRouter.pageAtor.ators.get(idAtor),
					});
					App.mainRegion.show(formAtor);
				} else {
					var model = new AtorModel({
						id : idAtor,
					})
					model.fetch({
						success : function(model) {
							formAtor = new FormAtor({
								model : model,
							});
							App.mainRegion.show(formAtor);
						},
						error : function(x, y, z) {
							console.error(x, y, z);
						}
					})
					util.breadcrumb({
						iconClass : 'fa-calendar',
						itemLabel : 'Atoros',
						itemSubFolderName : 'Formulário de atualização',
						url : 'app/ators'
					});
				}
			});
			//configuração das rotas de User
			appRouter.on('route:users', function() {
				util.markActiveItem('users');
				appRouter.pageUser = new PageUser();
				App.mainRegion.show(appRouter.pageUser);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'User',
					itemSubFolderName : 'Grid',
					url : 'app/users'
				});
			});
	
			appRouter.on('route:newUser', function() {
				util.markActiveItem('users');
				var formUser = new FormUser({
					model : new UserModel(),
				});
				App.mainRegion.show(formUser);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'User',
					itemSubFolderName : 'Formulário de cadastro',
					url : 'app/users'
				});
			});
			
			appRouter.on('route:editUser', function(idUser) {
				util.markActiveItem('users');
				var formUser = null;
				if (appRouter.pageUser) {
					formUser = new FormUser({
						model : appRouter.pageUser.users.get(idUser),
					});
					App.mainRegion.show(formUser);
				} else {
					var model = new UserModel({
						id : idUser,
					})
					model.fetch({
						success : function(model) {
							formUser = new FormUser({
								model : model,
							});
							App.mainRegion.show(formUser);
						},
						error : function(x, y, z) {
							console.error(x, y, z);
						}
					})
					util.breadcrumb({
						iconClass : 'fa-calendar',
						itemLabel : 'Useros',
						itemSubFolderName : 'Formulário de atualização',
						url : 'app/users'
					});
				}
			});
			//configuração das rotas de Role
			appRouter.on('route:roles', function() {
				util.markActiveItem('roles');
				appRouter.pageRole = new PageRole();
				App.mainRegion.show(appRouter.pageRole);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Role',
					itemSubFolderName : 'Grid',
					url : 'app/roles'
				});
			});
	
			appRouter.on('route:newRole', function() {
				util.markActiveItem('roles');
				var formRole = new FormRole({
					model : new RoleModel(),
				});
				App.mainRegion.show(formRole);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Role',
					itemSubFolderName : 'Formulário de cadastro',
					url : 'app/roles'
				});
			});
			
			appRouter.on('route:editRole', function(idRole) {
				util.markActiveItem('roles');
				var formRole = null;
				if (appRouter.pageRole) {
					formRole = new FormRole({
						model : appRouter.pageRole.roles.get(idRole),
					});
					App.mainRegion.show(formRole);
				} else {
					var model = new RoleModel({
						id : idRole,
					})
					model.fetch({
						success : function(model) {
							formRole = new FormRole({
								model : model,
							});
							App.mainRegion.show(formRole);
						},
						error : function(x, y, z) {
							console.error(x, y, z);
						}
					})
					util.breadcrumb({
						iconClass : 'fa-calendar',
						itemLabel : 'Roleos',
						itemSubFolderName : 'Formulário de atualização',
						url : 'app/roles'
					});
				}
			});
			//configuração das rotas de Permission
			appRouter.on('route:permissions', function() {
				util.markActiveItem('permissions');
				appRouter.pagePermission = new PagePermission();
				App.mainRegion.show(appRouter.pagePermission);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Permission',
					itemSubFolderName : 'Grid',
					url : 'app/permissions'
				});
			});
	
			appRouter.on('route:newPermission', function() {
				util.markActiveItem('permissions');
				var formPermission = new FormPermission({
					model : new PermissionModel(),
				});
				App.mainRegion.show(formPermission);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Permission',
					itemSubFolderName : 'Formulário de cadastro',
					url : 'app/permissions'
				});
			});
			
			appRouter.on('route:editPermission', function(idPermission) {
				util.markActiveItem('permissions');
				var formPermission = null;
				if (appRouter.pagePermission) {
					formPermission = new FormPermission({
						model : appRouter.pagePermission.permissions.get(idPermission),
					});
					App.mainRegion.show(formPermission);
				} else {
					var model = new PermissionModel({
						id : idPermission,
					})
					model.fetch({
						success : function(model) {
							formPermission = new FormPermission({
								model : model,
							});
							App.mainRegion.show(formPermission);
						},
						error : function(x, y, z) {
							console.error(x, y, z);
						}
					})
					util.breadcrumb({
						iconClass : 'fa-calendar',
						itemLabel : 'Permissionos',
						itemSubFolderName : 'Formulário de atualização',
						url : 'app/permissions'
					});
				}
			});
			//configuração das rotas de Group
			appRouter.on('route:groups', function() {
				util.markActiveItem('groups');
				appRouter.pageGroup = new PageGroup();
				App.mainRegion.show(appRouter.pageGroup);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Group',
					itemSubFolderName : 'Grid',
					url : 'app/groups'
				});
			});
	
			appRouter.on('route:newGroup', function() {
				util.markActiveItem('groups');
				var formGroup = new FormGroup({
					model : new GroupModel(),
				});
				App.mainRegion.show(formGroup);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Group',
					itemSubFolderName : 'Formulário de cadastro',
					url : 'app/groups'
				});
			});
			
			appRouter.on('route:editGroup', function(idGroup) {
				util.markActiveItem('groups');
				var formGroup = null;
				if (appRouter.pageGroup) {
					formGroup = new FormGroup({
						model : appRouter.pageGroup.groups.get(idGroup),
					});
					App.mainRegion.show(formGroup);
				} else {
					var model = new GroupModel({
						id : idGroup,
					})
					model.fetch({
						success : function(model) {
							formGroup = new FormGroup({
								model : model,
							});
							App.mainRegion.show(formGroup);
						},
						error : function(x, y, z) {
							console.error(x, y, z);
						}
					})
					util.breadcrumb({
						iconClass : 'fa-calendar',
						itemLabel : 'Groupos',
						itemSubFolderName : 'Formulário de atualização',
						url : 'app/groups'
					});
				}
			});
			//configuração das rotas de Item
			appRouter.on('route:items', function() {
				util.markActiveItem('items');
				appRouter.pageItem = new PageItem();
				App.mainRegion.show(appRouter.pageItem);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Item',
					itemSubFolderName : 'Grid',
					url : 'app/items'
				});
			});
	
			appRouter.on('route:newItem', function() {
				util.markActiveItem('items');
				var formItem = new FormItem({
					model : new ItemModel(),
				});
				App.mainRegion.show(formItem);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Item',
					itemSubFolderName : 'Formulário de cadastro',
					url : 'app/items'
				});
			});
			
			appRouter.on('route:editItem', function(idItem) {
				util.markActiveItem('items');
				var formItem = null;
				if (appRouter.pageItem) {
					formItem = new FormItem({
						model : appRouter.pageItem.items.get(idItem),
					});
					App.mainRegion.show(formItem);
				} else {
					var model = new ItemModel({
						id : idItem,
					})
					model.fetch({
						success : function(model) {
							formItem = new FormItem({
								model : model,
							});
							App.mainRegion.show(formItem);
						},
						error : function(x, y, z) {
							console.error(x, y, z);
						}
					})
					util.breadcrumb({
						iconClass : 'fa-calendar',
						itemLabel : 'Itemos',
						itemSubFolderName : 'Formulário de atualização',
						url : 'app/items'
					});
				}
			});
			

	############################################################################
						Menu de cadastros
	############################################################################
			<li id="linguagems" class="">
				<a href="#app/linguagems">
					<i class="menu-icon fa fa-caret-right"></i>
					Linguagem
				</a>
				<b class="arrow"></b>
			</li>
			<li id="avaliacaos" class="">
				<a href="#app/avaliacaos">
					<i class="menu-icon fa fa-caret-right"></i>
					Avaliação
				</a>
				<b class="arrow"></b>
			</li>
			<li id="assinantes" class="">
				<a href="#app/assinantes">
					<i class="menu-icon fa fa-caret-right"></i>
					Assinante
				</a>
				<b class="arrow"></b>
			</li>
			<li id="generos" class="">
				<a href="#app/generos">
					<i class="menu-icon fa fa-caret-right"></i>
					Gênero
				</a>
				<b class="arrow"></b>
			</li>
			<li id="criticos" class="">
				<a href="#app/criticos">
					<i class="menu-icon fa fa-caret-right"></i>
					Critico
				</a>
				<b class="arrow"></b>
			</li>
			<li id="filmes" class="">
				<a href="#app/filmes">
					<i class="menu-icon fa fa-caret-right"></i>
					Filme
				</a>
				<b class="arrow"></b>
			</li>
			<li id="visualizacaos" class="">
				<a href="#app/visualizacaos">
					<i class="menu-icon fa fa-caret-right"></i>
					Visualização
				</a>
				<b class="arrow"></b>
			</li>
			<li id="classificacaos" class="">
				<a href="#app/classificacaos">
					<i class="menu-icon fa fa-caret-right"></i>
					Classificação
				</a>
				<b class="arrow"></b>
			</li>
			<li id="ators" class="">
				<a href="#app/ators">
					<i class="menu-icon fa fa-caret-right"></i>
					Ator
				</a>
				<b class="arrow"></b>
			</li>
			<li id="users" class="">
				<a href="#app/users">
					<i class="menu-icon fa fa-caret-right"></i>
					Usuário
				</a>
				<b class="arrow"></b>
			</li>
			<li id="roles" class="">
				<a href="#app/roles">
					<i class="menu-icon fa fa-caret-right"></i>
					Papel
				</a>
				<b class="arrow"></b>
			</li>
			<li id="permissions" class="">
				<a href="#app/permissions">
					<i class="menu-icon fa fa-caret-right"></i>
					Permissão
				</a>
				<b class="arrow"></b>
			</li>
			<li id="groups" class="">
				<a href="#app/groups">
					<i class="menu-icon fa fa-caret-right"></i>
					Grupo de Permissões
				</a>
				<b class="arrow"></b>
			</li>
			<li id="items" class="">
				<a href="#app/items">
					<i class="menu-icon fa fa-caret-right"></i>
					Item
				</a>
				<b class="arrow"></b>
			</li>
		
	############################################################################
						Parser json-> objeto objeto -> json
	############################################################################
	//converte de entidade para json
	public static JsonLinguagem toJson(Linguagem linguagem) {
		JsonLinguagem jsonLinguagem = new JsonLinguagem();
		
		jsonLinguagem.setId(linguagem.getId());
	    jsonLinguagem.setNome(linguagem.getNome());
		return jsonLinguagem;
	}

	public static Linguagem toEntity(JsonLinguagem jsonLinguagem) {
		Linguagem linguagem = new Linguagem();
		
		linguagem.setId(jsonLinguagem.getId());
		linguagem.setNome(jsonLinguagem.getNome());
		return linguagem;
	}		
	
	public static List<JsonLinguagem> toListJsonLinguagems(List<Linguagem> all) {
		List<JsonLinguagem> jsonLinguagems = new ArrayList<JsonLinguagem>();
		for (Linguagem linguagem : all) {
			jsonLinguagems.add(toJson(linguagem));
		}
		return jsonLinguagems;
	}
	//converte de entidade para json
	public static JsonAvaliacao toJson(Avaliacao avaliacao) {
		JsonAvaliacao jsonAvaliacao = new JsonAvaliacao();
		
		jsonAvaliacao.setId(avaliacao.getId());
	    jsonAvaliacao.setDataHora(DateUtil.localDateTimeAsString(avaliacao.getDataHora()));
		jsonAvaliacao.setFilme(toJson(avaliacao.getFilme()));		
		jsonAvaliacao.setCritico(toJson(avaliacao.getCritico()));		
		return jsonAvaliacao;
	}

	public static Avaliacao toEntity(JsonAvaliacao jsonAvaliacao) {
		Avaliacao avaliacao = new Avaliacao();
		
		avaliacao.setId(jsonAvaliacao.getId());
	    avaliacao.setDataHora(DateUtil.stringAsLocalDateTime(jsonAvaliacao.getDataHora()));
		avaliacao.setFilme(toEntity(jsonAvaliacao.getFilme()));					
		avaliacao.setCritico(toEntity(jsonAvaliacao.getCritico()));					
		return avaliacao;
	}		
	
	public static List<JsonAvaliacao> toListJsonAvaliacaos(List<Avaliacao> all) {
		List<JsonAvaliacao> jsonAvaliacaos = new ArrayList<JsonAvaliacao>();
		for (Avaliacao avaliacao : all) {
			jsonAvaliacaos.add(toJson(avaliacao));
		}
		return jsonAvaliacaos;
	}
	//converte de entidade para json
	public static JsonAssinante toJson(Assinante assinante) {
		JsonAssinante jsonAssinante = new JsonAssinante();
		
		jsonAssinante.setId(assinante.getId());
	    jsonAssinante.setTelefone(assinante.getTelefone());
	    jsonAssinante.setDesconto(assinante.getDesconto());
		jsonAssinante.setDataVencimento(DateUtil.localDateAsString(assinante.getDataVencimento()));
	    jsonAssinante.setCpf(assinante.getCpf());
	    jsonAssinante.setNome(assinante.getNome());
	    jsonAssinante.setValorMensalidade(assinante.getValorMensalidade());
	    jsonAssinante.setObservacao(assinante.getObservacao());
	    jsonAssinante.setAtivo(assinante.getAtivo());
	    jsonAssinante.setFoto(assinante.getFoto());
	    jsonAssinante.setCelular(assinante.getCelular());
	    jsonAssinante.setRg(assinante.getRg());
	    jsonAssinante.setDataHoraAssinatura(DateUtil.localDateTimeAsString(assinante.getDataHoraAssinatura()));
		jsonAssinante.setDataNascimento(DateUtil.localDateAsString(assinante.getDataNascimento()));
		return jsonAssinante;
	}

	public static Assinante toEntity(JsonAssinante jsonAssinante) {
		Assinante assinante = new Assinante();
		
		assinante.setId(jsonAssinante.getId());
		assinante.setTelefone(jsonAssinante.getTelefone());
		assinante.setDesconto(jsonAssinante.getDesconto());
	    assinante.setDataVencimento(DateUtil.stringAsLocalDate(jsonAssinante.getDataVencimento()));
		assinante.setCpf(jsonAssinante.getCpf());
		assinante.setNome(jsonAssinante.getNome());
		assinante.setValorMensalidade(jsonAssinante.getValorMensalidade());
		assinante.setObservacao(jsonAssinante.getObservacao());
		assinante.setAtivo(jsonAssinante.getAtivo());
		assinante.setFoto(jsonAssinante.getFoto());
		assinante.setCelular(jsonAssinante.getCelular());
		assinante.setRg(jsonAssinante.getRg());
	    assinante.setDataHoraAssinatura(DateUtil.stringAsLocalDateTime(jsonAssinante.getDataHoraAssinatura()));
	    assinante.setDataNascimento(DateUtil.stringAsLocalDate(jsonAssinante.getDataNascimento()));
		return assinante;
	}		
	
	public static List<JsonAssinante> toListJsonAssinantes(List<Assinante> all) {
		List<JsonAssinante> jsonAssinantes = new ArrayList<JsonAssinante>();
		for (Assinante assinante : all) {
			jsonAssinantes.add(toJson(assinante));
		}
		return jsonAssinantes;
	}
	//converte de entidade para json
	public static JsonGenero toJson(Genero genero) {
		JsonGenero jsonGenero = new JsonGenero();
		
		jsonGenero.setId(genero.getId());
	    jsonGenero.setNome(genero.getNome());
	    jsonGenero.setDescricao(genero.getDescricao());
		return jsonGenero;
	}

	public static Genero toEntity(JsonGenero jsonGenero) {
		Genero genero = new Genero();
		
		genero.setId(jsonGenero.getId());
		genero.setNome(jsonGenero.getNome());
		genero.setDescricao(jsonGenero.getDescricao());
		return genero;
	}		
	
	public static List<JsonGenero> toListJsonGeneros(List<Genero> all) {
		List<JsonGenero> jsonGeneros = new ArrayList<JsonGenero>();
		for (Genero genero : all) {
			jsonGeneros.add(toJson(genero));
		}
		return jsonGeneros;
	}
	//converte de entidade para json
	public static JsonCritico toJson(Critico critico) {
		JsonCritico jsonCritico = new JsonCritico();
		
		jsonCritico.setId(critico.getId());
	    jsonCritico.setNome(critico.getNome());
	    jsonCritico.setEmpresa(critico.getEmpresa());
		return jsonCritico;
	}

	public static Critico toEntity(JsonCritico jsonCritico) {
		Critico critico = new Critico();
		
		critico.setId(jsonCritico.getId());
		critico.setNome(jsonCritico.getNome());
		critico.setEmpresa(jsonCritico.getEmpresa());
		return critico;
	}		
	
	public static List<JsonCritico> toListJsonCriticos(List<Critico> all) {
		List<JsonCritico> jsonCriticos = new ArrayList<JsonCritico>();
		for (Critico critico : all) {
			jsonCriticos.add(toJson(critico));
		}
		return jsonCriticos;
	}
	//converte de entidade para json
	public static JsonFilme toJson(Filme filme) {
		JsonFilme jsonFilme = new JsonFilme();
		
		jsonFilme.setId(filme.getId());
	    jsonFilme.setTituloOriginal(filme.getTituloOriginal());
	    jsonFilme.setPoster(filme.getPoster());
	    jsonFilme.setDuracao(filme.getDuracao());
		jsonFilme.setDataLancamento(DateUtil.localDateAsString(filme.getDataLancamento()));
	    jsonFilme.setSinopse(filme.getSinopse());
	    jsonFilme.setTitulo(filme.getTitulo());
	    jsonFilme.setDiretor(filme.getDiretor());
		jsonFilme.setClassificacao(toJson(filme.getClassificacao()));		
		jsonFilme.setLinguagem(toJson(filme.getLinguagem()));		
		return jsonFilme;
	}

	public static Filme toEntity(JsonFilme jsonFilme) {
		Filme filme = new Filme();
		
		filme.setId(jsonFilme.getId());
		filme.setTituloOriginal(jsonFilme.getTituloOriginal());
		filme.setPoster(jsonFilme.getPoster());
		filme.setDuracao(jsonFilme.getDuracao());
	    filme.setDataLancamento(DateUtil.stringAsLocalDate(jsonFilme.getDataLancamento()));
		filme.setSinopse(jsonFilme.getSinopse());
		filme.setTitulo(jsonFilme.getTitulo());
		filme.setDiretor(jsonFilme.getDiretor());
		filme.setClassificacao(toEntity(jsonFilme.getClassificacao()));					
		filme.setLinguagem(toEntity(jsonFilme.getLinguagem()));					
		return filme;
	}		
	
	public static List<JsonFilme> toListJsonFilmes(List<Filme> all) {
		List<JsonFilme> jsonFilmes = new ArrayList<JsonFilme>();
		for (Filme filme : all) {
			jsonFilmes.add(toJson(filme));
		}
		return jsonFilmes;
	}
	//converte de entidade para json
	public static JsonVisualizacao toJson(Visualizacao visualizacao) {
		JsonVisualizacao jsonVisualizacao = new JsonVisualizacao();
		
		jsonVisualizacao.setId(visualizacao.getId());
	    jsonVisualizacao.setDataHora(DateUtil.localDateTimeAsString(visualizacao.getDataHora()));
	    jsonVisualizacao.setPercentualAssistido(visualizacao.getPercentualAssistido());
		jsonVisualizacao.setFilme(toJson(visualizacao.getFilme()));		
		jsonVisualizacao.setAssinante(toJson(visualizacao.getAssinante()));		
		return jsonVisualizacao;
	}

	public static Visualizacao toEntity(JsonVisualizacao jsonVisualizacao) {
		Visualizacao visualizacao = new Visualizacao();
		
		visualizacao.setId(jsonVisualizacao.getId());
	    visualizacao.setDataHora(DateUtil.stringAsLocalDateTime(jsonVisualizacao.getDataHora()));
		visualizacao.setPercentualAssistido(jsonVisualizacao.getPercentualAssistido());
		visualizacao.setFilme(toEntity(jsonVisualizacao.getFilme()));					
		visualizacao.setAssinante(toEntity(jsonVisualizacao.getAssinante()));					
		return visualizacao;
	}		
	
	public static List<JsonVisualizacao> toListJsonVisualizacaos(List<Visualizacao> all) {
		List<JsonVisualizacao> jsonVisualizacaos = new ArrayList<JsonVisualizacao>();
		for (Visualizacao visualizacao : all) {
			jsonVisualizacaos.add(toJson(visualizacao));
		}
		return jsonVisualizacaos;
	}
	//converte de entidade para json
	public static JsonClassificacao toJson(Classificacao classificacao) {
		JsonClassificacao jsonClassificacao = new JsonClassificacao();
		
		jsonClassificacao.setId(classificacao.getId());
	    jsonClassificacao.setIdadeMinima(classificacao.getIdadeMinima());
	    jsonClassificacao.setNome(classificacao.getNome());
	    jsonClassificacao.setDescricao(classificacao.getDescricao());
		return jsonClassificacao;
	}

	public static Classificacao toEntity(JsonClassificacao jsonClassificacao) {
		Classificacao classificacao = new Classificacao();
		
		classificacao.setId(jsonClassificacao.getId());
		classificacao.setIdadeMinima(jsonClassificacao.getIdadeMinima());
		classificacao.setNome(jsonClassificacao.getNome());
		classificacao.setDescricao(jsonClassificacao.getDescricao());
		return classificacao;
	}		
	
	public static List<JsonClassificacao> toListJsonClassificacaos(List<Classificacao> all) {
		List<JsonClassificacao> jsonClassificacaos = new ArrayList<JsonClassificacao>();
		for (Classificacao classificacao : all) {
			jsonClassificacaos.add(toJson(classificacao));
		}
		return jsonClassificacaos;
	}
	//converte de entidade para json
	public static JsonAtor toJson(Ator ator) {
		JsonAtor jsonAtor = new JsonAtor();
		
		jsonAtor.setId(ator.getId());
	    jsonAtor.setBiografia(ator.getBiografia());
		jsonAtor.setDataNascimento(DateUtil.localDateAsString(ator.getDataNascimento()));
	    jsonAtor.setNome(ator.getNome());
	    jsonAtor.setFoto(ator.getFoto());
		return jsonAtor;
	}

	public static Ator toEntity(JsonAtor jsonAtor) {
		Ator ator = new Ator();
		
		ator.setId(jsonAtor.getId());
		ator.setBiografia(jsonAtor.getBiografia());
	    ator.setDataNascimento(DateUtil.stringAsLocalDate(jsonAtor.getDataNascimento()));
		ator.setNome(jsonAtor.getNome());
		ator.setFoto(jsonAtor.getFoto());
		return ator;
	}		
	
	public static List<JsonAtor> toListJsonAtors(List<Ator> all) {
		List<JsonAtor> jsonAtors = new ArrayList<JsonAtor>();
		for (Ator ator : all) {
			jsonAtors.add(toJson(ator));
		}
		return jsonAtors;
	}
	//converte de entidade para json
	public static JsonUser toJson(User user) {
		JsonUser jsonUser = new JsonUser();
		
		jsonUser.setId(user.getId());
	    jsonUser.setName(user.getName());
	    jsonUser.setUsername(user.getUsername());
	    jsonUser.setEmail(user.getEmail());
	    jsonUser.setPassword(user.getPassword());
	    jsonUser.setEnable(user.getEnable());
	    jsonUser.setImage(user.getImage());
		return jsonUser;
	}

	public static User toEntity(JsonUser jsonUser) {
		User user = new User();
		
		user.setId(jsonUser.getId());
		user.setName(jsonUser.getName());
		user.setUsername(jsonUser.getUsername());
		user.setEmail(jsonUser.getEmail());
		user.setPassword(jsonUser.getPassword());
		user.setEnable(jsonUser.getEnable());
		user.setImage(jsonUser.getImage());
		return user;
	}		
	
	public static List<JsonUser> toListJsonUsers(List<User> all) {
		List<JsonUser> jsonUsers = new ArrayList<JsonUser>();
		for (User user : all) {
			jsonUsers.add(toJson(user));
		}
		return jsonUsers;
	}
	//converte de entidade para json
	public static JsonRole toJson(Role role) {
		JsonRole jsonRole = new JsonRole();
		
		jsonRole.setId(role.getId());
	    jsonRole.setAuthority(role.getAuthority());
	    jsonRole.setDescription(role.getDescription());
		return jsonRole;
	}

	public static Role toEntity(JsonRole jsonRole) {
		Role role = new Role();
		
		role.setId(jsonRole.getId());
		role.setAuthority(jsonRole.getAuthority());
		role.setDescription(jsonRole.getDescription());
		return role;
	}		
	
	public static List<JsonRole> toListJsonRoles(List<Role> all) {
		List<JsonRole> jsonRoles = new ArrayList<JsonRole>();
		for (Role role : all) {
			jsonRoles.add(toJson(role));
		}
		return jsonRoles;
	}
	//converte de entidade para json
	public static JsonPermission toJson(Permission permission) {
		JsonPermission jsonPermission = new JsonPermission();
		
		jsonPermission.setId(permission.getId());
	    jsonPermission.setName(permission.getName());
	    jsonPermission.setDescription(permission.getDescription());
	    jsonPermission.setOperation(permission.getOperation());
	    jsonPermission.setTagReminder(permission.getTagReminder());
		jsonPermission.setItem(toJson(permission.getItem()));		
		return jsonPermission;
	}

	public static Permission toEntity(JsonPermission jsonPermission) {
		Permission permission = new Permission();
		
		permission.setId(jsonPermission.getId());
		permission.setName(jsonPermission.getName());
		permission.setDescription(jsonPermission.getDescription());
		permission.setOperation(jsonPermission.getOperation());
		permission.setTagReminder(jsonPermission.getTagReminder());
		permission.setItem(toEntity(jsonPermission.getItem()));					
		return permission;
	}		
	
	public static List<JsonPermission> toListJsonPermissions(List<Permission> all) {
		List<JsonPermission> jsonPermissions = new ArrayList<JsonPermission>();
		for (Permission permission : all) {
			jsonPermissions.add(toJson(permission));
		}
		return jsonPermissions;
	}
	//converte de entidade para json
	public static JsonGroup toJson(Group group) {
		JsonGroup jsonGroup = new JsonGroup();
		
		jsonGroup.setId(group.getId());
	    jsonGroup.setName(group.getName());
	    jsonGroup.setDescription(group.getDescription());
		return jsonGroup;
	}

	public static Group toEntity(JsonGroup jsonGroup) {
		Group group = new Group();
		
		group.setId(jsonGroup.getId());
		group.setName(jsonGroup.getName());
		group.setDescription(jsonGroup.getDescription());
		return group;
	}		
	
	public static List<JsonGroup> toListJsonGroups(List<Group> all) {
		List<JsonGroup> jsonGroups = new ArrayList<JsonGroup>();
		for (Group group : all) {
			jsonGroups.add(toJson(group));
		}
		return jsonGroups;
	}
	//converte de entidade para json
	public static JsonItem toJson(Item item) {
		JsonItem jsonItem = new JsonItem();
		
		jsonItem.setId(item.getId());
	    jsonItem.setName(item.getName());
	    jsonItem.setItemType(item.getItemType());
	    jsonItem.setIdentifier(item.getIdentifier());
	    jsonItem.setDescription(item.getDescription());
		return jsonItem;
	}

	public static Item toEntity(JsonItem jsonItem) {
		Item item = new Item();
		
		item.setId(jsonItem.getId());
		item.setName(jsonItem.getName());
		item.setItemType(jsonItem.getItemType());
		item.setIdentifier(jsonItem.getIdentifier());
		item.setDescription(jsonItem.getDescription());
		return item;
	}		
	
	public static List<JsonItem> toListJsonItems(List<Item> all) {
		List<JsonItem> jsonItems = new ArrayList<JsonItem>();
		for (Item item : all) {
			jsonItems.add(toJson(item));
		}
		return jsonItems;
	}

	############################################################################
						Seed permissions
	############################################################################

-- registros de autorização para Linguagem	
	-- campos de tela
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Item de menu principal para tela de pesquisa de Linguagem', 			'item-list-Linguagem',	'COMPONENT', 'Menu Linguagems'					);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Linguagem. Permissão de acesso ao menu de Linguagem', 'Usuário Poderá ver e acessar o item de menu de Linguagem ', 'LEITURA', 'CRUD Linguagem , item Menu ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botôes de salvar e salvar e continuar no formulario de Linguagem', 	'save-Linguagem', 		'COMPONENT', 'Botão Salva Linguagem'			);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Linguagem. Permissão de acesso ao botão de salvar e salvar e continuar no formulario de Linguagem', 'Usuário Poderá ver e acessar o botão de de salvar e salvar e continuar no formulario de Linguagem ', 'LEITURA', 'CRUD Linguagem , botão salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de novo na listagem de Linguagem', 								'new-Linguagem', 		'COMPONENT', 'Botão Novo Linguagem'				);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Linguagem. Permissão de acesso ao botão de novo no formulario de Linguagem', 'Usuário Poderá ver e acessar ao botão de novo no formulario de Linguagem ', 'LEITURA', 'CRUD Linguagem , botão novo ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de Edição de Linguagem no grid de Linguagem na Listagem', 			'edit-Linguagem', 		'COMPONENT', 'Botão Editar Linguagem no Grid de Linguagem');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Linguagem. Permissão de acesso ao botão de edição no grid de Linguagem', 'Usuário Poderá ver e acessar ao botão de edicao no grid de Linguagem ', 'LEITURA', 'CRUD Linguagem , botão edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de deletar Linguagem no grid de Linguagem na Listagem', 			'remove-Linguagem', 	'COMPONENT', 'Botão deletar Linguagem no Grid de Linguagem');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Linguagem. Permissão de acesso ao botão de delete no grid de Linguagem', 'Usuário Poderá ver e acessar ao botão de delete no grid de Linguagem ', 'LEITURA', 'CRUD Linguagem , botão delete ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

    --telas
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de listagem de Linguagem', 										'app/linguagems', 		'SCREEN', 'Pesquisa de  Linguagems');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Linguagem. Permissão de acesso a tela de listagem de  Linguagem', 'Usuário Poderá ver e acessar a tela de listagem de  Linguagem ', 'LEITURA', 'CRUD Linguagem , tela listagem  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de Cadastro de Linguagem', 										'app/newLinguagem', 	'SCREEN', 'Cadastro  de Linguagems');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Linguagem. Permissão de acesso a tela de cadastro de  Linguagem', 'Usuário Poderá ver e acessar a tela de cadastro de  Linguagem ', 'LEITURA', 'CRUD Linguagem , tela de cadastro  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de edição de Linguagem', 										'app/editLinguagem', 	'SCREEN', 'Edição de  Linguagems');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Linguagem. Permissão de acesso a tela de edição de  Linguagem', 'Usuário Poderá ver e acessar a tela de edição de  Linguagem ', 'LEITURA', 'CRUD Linguagem , tela de edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	-- servicos
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Linguagems', 										'crud/linguagems', 		'SERVICE', 			'Servico de Linguagems');  -- ler e escrever
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Linguagem. Permissão de acesso ao serviço de listagem de  Linguagem', 'Usuário Poderá acessar ao serviço de listagem de  Linguagem ', 'LEITURA', 'CRUD Linguagem , servico listar varios ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Linguagem. Permissão de acesso ao serviço para salvar um novo Linguagem', 'Usuário Poderá acessar ao serviço para salvar um novo Linguagem ', 'ESCRITA', 'CRUD Linguagem , servico salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso TODOS os Linguagems', 									'crud/linguagems/all', 		'SERVICE', 			'Servico de TODOS os Linguagems');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Linguagem. Permissão de acesso ao serviço para listar todos  os Linguagem', 'Usuário Poderá acessar ao serviço para salvar um novo Linguagem ', 'LEITURA', 'CRUD Linguagem , servico listar todos ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Linguagems por filtro', 							'crud/linguagems/filter', 		'SERVICE', 			'Servico de Linguagems sob filtro');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Linguagem. Permissão de acesso ao serviço para listagem por filtro de Linguagem', 'Usuário Poderá acessar ao serviço para listagem por filtro de Linguagem ', 'LEITURA', 'CRUD Linguagem , servico listar por filtro ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso a um Linguagem específico', 							'crud/linguagems/[0-9]', 		'SERVICE', 			'Servico para acesso a Linguagem especifico'); --GET, PUT e DELETE 
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Linguagem. Permissão de acesso ao serviço para listagem de um unico Linguagem', 'Usuário Poderá acessar ao serviço para listagem de um unico Linguagem ', 'LEITURA', 'CRUD Linguagem , servico listar um unico ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Linguagem. Permissão de acesso ao serviço para atualizacao de um unico Linguagem', 'Usuário Poderá acessar ao serviço para atualizacao de um unico Linguagem ', 'ATUALIZACAO', 'CRUD Linguagem , servico atualização ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Linguagem. Permissão de acesso ao serviço para deleção/remoção de um unico Linguagem', 'Usuário Poderá acessar ao serviço para deleção/remoção de um unico Linguagem ', 'DELECAO', 'CRUD Linguagem , servico remoção deleção');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

-- registros de autorização para Avaliação	
	-- campos de tela
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Item de menu principal para tela de pesquisa de Avaliação', 			'item-list-Avaliacao',	'COMPONENT', 'Menu Avaliaçãos'					);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Avaliação. Permissão de acesso ao menu de Avaliação', 'Usuário Poderá ver e acessar o item de menu de Avaliação ', 'LEITURA', 'CRUD Avaliação , item Menu ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botôes de salvar e salvar e continuar no formulario de Avaliação', 	'save-Avaliacao', 		'COMPONENT', 'Botão Salva Avaliação'			);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Avaliação. Permissão de acesso ao botão de salvar e salvar e continuar no formulario de Avaliação', 'Usuário Poderá ver e acessar o botão de de salvar e salvar e continuar no formulario de Avaliação ', 'LEITURA', 'CRUD Avaliação , botão salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de novo na listagem de Avaliação', 								'new-Avaliacao', 		'COMPONENT', 'Botão Novo Avaliação'				);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Avaliação. Permissão de acesso ao botão de novo no formulario de Avaliação', 'Usuário Poderá ver e acessar ao botão de novo no formulario de Avaliação ', 'LEITURA', 'CRUD Avaliação , botão novo ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de Edição de Avaliação no grid de Avaliação na Listagem', 			'edit-Avaliacao', 		'COMPONENT', 'Botão Editar Avaliação no Grid de Avaliação');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Avaliação. Permissão de acesso ao botão de edição no grid de Avaliação', 'Usuário Poderá ver e acessar ao botão de edicao no grid de Avaliação ', 'LEITURA', 'CRUD Avaliação , botão edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de deletar Avaliação no grid de Avaliação na Listagem', 			'remove-Avaliacao', 	'COMPONENT', 'Botão deletar Avaliação no Grid de Avaliação');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Avaliação. Permissão de acesso ao botão de delete no grid de Avaliação', 'Usuário Poderá ver e acessar ao botão de delete no grid de Avaliação ', 'LEITURA', 'CRUD Avaliação , botão delete ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

    --telas
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de listagem de Avaliação', 										'app/avaliacaos', 		'SCREEN', 'Pesquisa de  Avaliaçãos');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Avaliação. Permissão de acesso a tela de listagem de  Avaliação', 'Usuário Poderá ver e acessar a tela de listagem de  Avaliação ', 'LEITURA', 'CRUD Avaliação , tela listagem  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de Cadastro de Avaliação', 										'app/newAvaliacao', 	'SCREEN', 'Cadastro  de Avaliaçãos');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Avaliação. Permissão de acesso a tela de cadastro de  Avaliação', 'Usuário Poderá ver e acessar a tela de cadastro de  Avaliação ', 'LEITURA', 'CRUD Avaliação , tela de cadastro  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de edição de Avaliação', 										'app/editAvaliacao', 	'SCREEN', 'Edição de  Avaliaçãos');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Avaliação. Permissão de acesso a tela de edição de  Avaliação', 'Usuário Poderá ver e acessar a tela de edição de  Avaliação ', 'LEITURA', 'CRUD Avaliação , tela de edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	-- servicos
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Avaliaçãos', 										'crud/avaliacaos', 		'SERVICE', 			'Servico de Avaliaçãos');  -- ler e escrever
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Avaliação. Permissão de acesso ao serviço de listagem de  Avaliação', 'Usuário Poderá acessar ao serviço de listagem de  Avaliação ', 'LEITURA', 'CRUD Avaliação , servico listar varios ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Avaliação. Permissão de acesso ao serviço para salvar um novo Avaliação', 'Usuário Poderá acessar ao serviço para salvar um novo Avaliação ', 'ESCRITA', 'CRUD Avaliação , servico salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso TODOS os Avaliaçãos', 									'crud/avaliacaos/all', 		'SERVICE', 			'Servico de TODOS os Avaliaçãos');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Avaliação. Permissão de acesso ao serviço para listar todos  os Avaliação', 'Usuário Poderá acessar ao serviço para salvar um novo Avaliação ', 'LEITURA', 'CRUD Avaliação , servico listar todos ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Avaliaçãos por filtro', 							'crud/avaliacaos/filter', 		'SERVICE', 			'Servico de Avaliaçãos sob filtro');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Avaliação. Permissão de acesso ao serviço para listagem por filtro de Avaliação', 'Usuário Poderá acessar ao serviço para listagem por filtro de Avaliação ', 'LEITURA', 'CRUD Avaliação , servico listar por filtro ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso a um Avaliação específico', 							'crud/avaliacaos/[0-9]', 		'SERVICE', 			'Servico para acesso a Avaliação especifico'); --GET, PUT e DELETE 
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Avaliação. Permissão de acesso ao serviço para listagem de um unico Avaliação', 'Usuário Poderá acessar ao serviço para listagem de um unico Avaliação ', 'LEITURA', 'CRUD Avaliação , servico listar um unico ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Avaliação. Permissão de acesso ao serviço para atualizacao de um unico Avaliação', 'Usuário Poderá acessar ao serviço para atualizacao de um unico Avaliação ', 'ATUALIZACAO', 'CRUD Avaliação , servico atualização ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Avaliação. Permissão de acesso ao serviço para deleção/remoção de um unico Avaliação', 'Usuário Poderá acessar ao serviço para deleção/remoção de um unico Avaliação ', 'DELECAO', 'CRUD Avaliação , servico remoção deleção');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

-- registros de autorização para Assinante	
	-- campos de tela
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Item de menu principal para tela de pesquisa de Assinante', 			'item-list-Assinante',	'COMPONENT', 'Menu Assinantes'					);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Assinante. Permissão de acesso ao menu de Assinante', 'Usuário Poderá ver e acessar o item de menu de Assinante ', 'LEITURA', 'CRUD Assinante , item Menu ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botôes de salvar e salvar e continuar no formulario de Assinante', 	'save-Assinante', 		'COMPONENT', 'Botão Salva Assinante'			);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Assinante. Permissão de acesso ao botão de salvar e salvar e continuar no formulario de Assinante', 'Usuário Poderá ver e acessar o botão de de salvar e salvar e continuar no formulario de Assinante ', 'LEITURA', 'CRUD Assinante , botão salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de novo na listagem de Assinante', 								'new-Assinante', 		'COMPONENT', 'Botão Novo Assinante'				);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Assinante. Permissão de acesso ao botão de novo no formulario de Assinante', 'Usuário Poderá ver e acessar ao botão de novo no formulario de Assinante ', 'LEITURA', 'CRUD Assinante , botão novo ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de Edição de Assinante no grid de Assinante na Listagem', 			'edit-Assinante', 		'COMPONENT', 'Botão Editar Assinante no Grid de Assinante');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Assinante. Permissão de acesso ao botão de edição no grid de Assinante', 'Usuário Poderá ver e acessar ao botão de edicao no grid de Assinante ', 'LEITURA', 'CRUD Assinante , botão edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de deletar Assinante no grid de Assinante na Listagem', 			'remove-Assinante', 	'COMPONENT', 'Botão deletar Assinante no Grid de Assinante');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Assinante. Permissão de acesso ao botão de delete no grid de Assinante', 'Usuário Poderá ver e acessar ao botão de delete no grid de Assinante ', 'LEITURA', 'CRUD Assinante , botão delete ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

    --telas
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de listagem de Assinante', 										'app/assinantes', 		'SCREEN', 'Pesquisa de  Assinantes');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Assinante. Permissão de acesso a tela de listagem de  Assinante', 'Usuário Poderá ver e acessar a tela de listagem de  Assinante ', 'LEITURA', 'CRUD Assinante , tela listagem  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de Cadastro de Assinante', 										'app/newAssinante', 	'SCREEN', 'Cadastro  de Assinantes');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Assinante. Permissão de acesso a tela de cadastro de  Assinante', 'Usuário Poderá ver e acessar a tela de cadastro de  Assinante ', 'LEITURA', 'CRUD Assinante , tela de cadastro  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de edição de Assinante', 										'app/editAssinante', 	'SCREEN', 'Edição de  Assinantes');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Assinante. Permissão de acesso a tela de edição de  Assinante', 'Usuário Poderá ver e acessar a tela de edição de  Assinante ', 'LEITURA', 'CRUD Assinante , tela de edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	-- servicos
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Assinantes', 										'crud/assinantes', 		'SERVICE', 			'Servico de Assinantes');  -- ler e escrever
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Assinante. Permissão de acesso ao serviço de listagem de  Assinante', 'Usuário Poderá acessar ao serviço de listagem de  Assinante ', 'LEITURA', 'CRUD Assinante , servico listar varios ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Assinante. Permissão de acesso ao serviço para salvar um novo Assinante', 'Usuário Poderá acessar ao serviço para salvar um novo Assinante ', 'ESCRITA', 'CRUD Assinante , servico salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso TODOS os Assinantes', 									'crud/assinantes/all', 		'SERVICE', 			'Servico de TODOS os Assinantes');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Assinante. Permissão de acesso ao serviço para listar todos  os Assinante', 'Usuário Poderá acessar ao serviço para salvar um novo Assinante ', 'LEITURA', 'CRUD Assinante , servico listar todos ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Assinantes por filtro', 							'crud/assinantes/filter', 		'SERVICE', 			'Servico de Assinantes sob filtro');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Assinante. Permissão de acesso ao serviço para listagem por filtro de Assinante', 'Usuário Poderá acessar ao serviço para listagem por filtro de Assinante ', 'LEITURA', 'CRUD Assinante , servico listar por filtro ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso a um Assinante específico', 							'crud/assinantes/[0-9]', 		'SERVICE', 			'Servico para acesso a Assinante especifico'); --GET, PUT e DELETE 
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Assinante. Permissão de acesso ao serviço para listagem de um unico Assinante', 'Usuário Poderá acessar ao serviço para listagem de um unico Assinante ', 'LEITURA', 'CRUD Assinante , servico listar um unico ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Assinante. Permissão de acesso ao serviço para atualizacao de um unico Assinante', 'Usuário Poderá acessar ao serviço para atualizacao de um unico Assinante ', 'ATUALIZACAO', 'CRUD Assinante , servico atualização ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Assinante. Permissão de acesso ao serviço para deleção/remoção de um unico Assinante', 'Usuário Poderá acessar ao serviço para deleção/remoção de um unico Assinante ', 'DELECAO', 'CRUD Assinante , servico remoção deleção');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

-- registros de autorização para Gênero	
	-- campos de tela
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Item de menu principal para tela de pesquisa de Gênero', 			'item-list-Genero',	'COMPONENT', 'Menu Gêneros'					);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Gênero. Permissão de acesso ao menu de Gênero', 'Usuário Poderá ver e acessar o item de menu de Gênero ', 'LEITURA', 'CRUD Gênero , item Menu ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botôes de salvar e salvar e continuar no formulario de Gênero', 	'save-Genero', 		'COMPONENT', 'Botão Salva Gênero'			);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Gênero. Permissão de acesso ao botão de salvar e salvar e continuar no formulario de Gênero', 'Usuário Poderá ver e acessar o botão de de salvar e salvar e continuar no formulario de Gênero ', 'LEITURA', 'CRUD Gênero , botão salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de novo na listagem de Gênero', 								'new-Genero', 		'COMPONENT', 'Botão Novo Gênero'				);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Gênero. Permissão de acesso ao botão de novo no formulario de Gênero', 'Usuário Poderá ver e acessar ao botão de novo no formulario de Gênero ', 'LEITURA', 'CRUD Gênero , botão novo ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de Edição de Gênero no grid de Gênero na Listagem', 			'edit-Genero', 		'COMPONENT', 'Botão Editar Gênero no Grid de Gênero');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Gênero. Permissão de acesso ao botão de edição no grid de Gênero', 'Usuário Poderá ver e acessar ao botão de edicao no grid de Gênero ', 'LEITURA', 'CRUD Gênero , botão edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de deletar Gênero no grid de Gênero na Listagem', 			'remove-Genero', 	'COMPONENT', 'Botão deletar Gênero no Grid de Gênero');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Gênero. Permissão de acesso ao botão de delete no grid de Gênero', 'Usuário Poderá ver e acessar ao botão de delete no grid de Gênero ', 'LEITURA', 'CRUD Gênero , botão delete ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

    --telas
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de listagem de Gênero', 										'app/generos', 		'SCREEN', 'Pesquisa de  Gêneros');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Gênero. Permissão de acesso a tela de listagem de  Gênero', 'Usuário Poderá ver e acessar a tela de listagem de  Gênero ', 'LEITURA', 'CRUD Gênero , tela listagem  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de Cadastro de Gênero', 										'app/newGenero', 	'SCREEN', 'Cadastro  de Gêneros');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Gênero. Permissão de acesso a tela de cadastro de  Gênero', 'Usuário Poderá ver e acessar a tela de cadastro de  Gênero ', 'LEITURA', 'CRUD Gênero , tela de cadastro  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de edição de Gênero', 										'app/editGenero', 	'SCREEN', 'Edição de  Gêneros');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Gênero. Permissão de acesso a tela de edição de  Gênero', 'Usuário Poderá ver e acessar a tela de edição de  Gênero ', 'LEITURA', 'CRUD Gênero , tela de edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	-- servicos
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Gêneros', 										'crud/generos', 		'SERVICE', 			'Servico de Gêneros');  -- ler e escrever
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Gênero. Permissão de acesso ao serviço de listagem de  Gênero', 'Usuário Poderá acessar ao serviço de listagem de  Gênero ', 'LEITURA', 'CRUD Gênero , servico listar varios ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Gênero. Permissão de acesso ao serviço para salvar um novo Gênero', 'Usuário Poderá acessar ao serviço para salvar um novo Gênero ', 'ESCRITA', 'CRUD Gênero , servico salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso TODOS os Gêneros', 									'crud/generos/all', 		'SERVICE', 			'Servico de TODOS os Gêneros');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Gênero. Permissão de acesso ao serviço para listar todos  os Gênero', 'Usuário Poderá acessar ao serviço para salvar um novo Gênero ', 'LEITURA', 'CRUD Gênero , servico listar todos ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Gêneros por filtro', 							'crud/generos/filter', 		'SERVICE', 			'Servico de Gêneros sob filtro');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Gênero. Permissão de acesso ao serviço para listagem por filtro de Gênero', 'Usuário Poderá acessar ao serviço para listagem por filtro de Gênero ', 'LEITURA', 'CRUD Gênero , servico listar por filtro ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso a um Gênero específico', 							'crud/generos/[0-9]', 		'SERVICE', 			'Servico para acesso a Gênero especifico'); --GET, PUT e DELETE 
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Gênero. Permissão de acesso ao serviço para listagem de um unico Gênero', 'Usuário Poderá acessar ao serviço para listagem de um unico Gênero ', 'LEITURA', 'CRUD Gênero , servico listar um unico ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Gênero. Permissão de acesso ao serviço para atualizacao de um unico Gênero', 'Usuário Poderá acessar ao serviço para atualizacao de um unico Gênero ', 'ATUALIZACAO', 'CRUD Gênero , servico atualização ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Gênero. Permissão de acesso ao serviço para deleção/remoção de um unico Gênero', 'Usuário Poderá acessar ao serviço para deleção/remoção de um unico Gênero ', 'DELECAO', 'CRUD Gênero , servico remoção deleção');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

-- registros de autorização para Critico	
	-- campos de tela
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Item de menu principal para tela de pesquisa de Critico', 			'item-list-Critico',	'COMPONENT', 'Menu Criticos'					);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Critico. Permissão de acesso ao menu de Critico', 'Usuário Poderá ver e acessar o item de menu de Critico ', 'LEITURA', 'CRUD Critico , item Menu ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botôes de salvar e salvar e continuar no formulario de Critico', 	'save-Critico', 		'COMPONENT', 'Botão Salva Critico'			);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Critico. Permissão de acesso ao botão de salvar e salvar e continuar no formulario de Critico', 'Usuário Poderá ver e acessar o botão de de salvar e salvar e continuar no formulario de Critico ', 'LEITURA', 'CRUD Critico , botão salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de novo na listagem de Critico', 								'new-Critico', 		'COMPONENT', 'Botão Novo Critico'				);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Critico. Permissão de acesso ao botão de novo no formulario de Critico', 'Usuário Poderá ver e acessar ao botão de novo no formulario de Critico ', 'LEITURA', 'CRUD Critico , botão novo ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de Edição de Critico no grid de Critico na Listagem', 			'edit-Critico', 		'COMPONENT', 'Botão Editar Critico no Grid de Critico');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Critico. Permissão de acesso ao botão de edição no grid de Critico', 'Usuário Poderá ver e acessar ao botão de edicao no grid de Critico ', 'LEITURA', 'CRUD Critico , botão edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de deletar Critico no grid de Critico na Listagem', 			'remove-Critico', 	'COMPONENT', 'Botão deletar Critico no Grid de Critico');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Critico. Permissão de acesso ao botão de delete no grid de Critico', 'Usuário Poderá ver e acessar ao botão de delete no grid de Critico ', 'LEITURA', 'CRUD Critico , botão delete ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

    --telas
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de listagem de Critico', 										'app/criticos', 		'SCREEN', 'Pesquisa de  Criticos');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Critico. Permissão de acesso a tela de listagem de  Critico', 'Usuário Poderá ver e acessar a tela de listagem de  Critico ', 'LEITURA', 'CRUD Critico , tela listagem  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de Cadastro de Critico', 										'app/newCritico', 	'SCREEN', 'Cadastro  de Criticos');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Critico. Permissão de acesso a tela de cadastro de  Critico', 'Usuário Poderá ver e acessar a tela de cadastro de  Critico ', 'LEITURA', 'CRUD Critico , tela de cadastro  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de edição de Critico', 										'app/editCritico', 	'SCREEN', 'Edição de  Criticos');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Critico. Permissão de acesso a tela de edição de  Critico', 'Usuário Poderá ver e acessar a tela de edição de  Critico ', 'LEITURA', 'CRUD Critico , tela de edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	-- servicos
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Criticos', 										'crud/criticos', 		'SERVICE', 			'Servico de Criticos');  -- ler e escrever
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Critico. Permissão de acesso ao serviço de listagem de  Critico', 'Usuário Poderá acessar ao serviço de listagem de  Critico ', 'LEITURA', 'CRUD Critico , servico listar varios ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Critico. Permissão de acesso ao serviço para salvar um novo Critico', 'Usuário Poderá acessar ao serviço para salvar um novo Critico ', 'ESCRITA', 'CRUD Critico , servico salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso TODOS os Criticos', 									'crud/criticos/all', 		'SERVICE', 			'Servico de TODOS os Criticos');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Critico. Permissão de acesso ao serviço para listar todos  os Critico', 'Usuário Poderá acessar ao serviço para salvar um novo Critico ', 'LEITURA', 'CRUD Critico , servico listar todos ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Criticos por filtro', 							'crud/criticos/filter', 		'SERVICE', 			'Servico de Criticos sob filtro');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Critico. Permissão de acesso ao serviço para listagem por filtro de Critico', 'Usuário Poderá acessar ao serviço para listagem por filtro de Critico ', 'LEITURA', 'CRUD Critico , servico listar por filtro ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso a um Critico específico', 							'crud/criticos/[0-9]', 		'SERVICE', 			'Servico para acesso a Critico especifico'); --GET, PUT e DELETE 
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Critico. Permissão de acesso ao serviço para listagem de um unico Critico', 'Usuário Poderá acessar ao serviço para listagem de um unico Critico ', 'LEITURA', 'CRUD Critico , servico listar um unico ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Critico. Permissão de acesso ao serviço para atualizacao de um unico Critico', 'Usuário Poderá acessar ao serviço para atualizacao de um unico Critico ', 'ATUALIZACAO', 'CRUD Critico , servico atualização ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Critico. Permissão de acesso ao serviço para deleção/remoção de um unico Critico', 'Usuário Poderá acessar ao serviço para deleção/remoção de um unico Critico ', 'DELECAO', 'CRUD Critico , servico remoção deleção');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

-- registros de autorização para Filme	
	-- campos de tela
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Item de menu principal para tela de pesquisa de Filme', 			'item-list-Filme',	'COMPONENT', 'Menu Filmes'					);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Filme. Permissão de acesso ao menu de Filme', 'Usuário Poderá ver e acessar o item de menu de Filme ', 'LEITURA', 'CRUD Filme , item Menu ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botôes de salvar e salvar e continuar no formulario de Filme', 	'save-Filme', 		'COMPONENT', 'Botão Salva Filme'			);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Filme. Permissão de acesso ao botão de salvar e salvar e continuar no formulario de Filme', 'Usuário Poderá ver e acessar o botão de de salvar e salvar e continuar no formulario de Filme ', 'LEITURA', 'CRUD Filme , botão salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de novo na listagem de Filme', 								'new-Filme', 		'COMPONENT', 'Botão Novo Filme'				);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Filme. Permissão de acesso ao botão de novo no formulario de Filme', 'Usuário Poderá ver e acessar ao botão de novo no formulario de Filme ', 'LEITURA', 'CRUD Filme , botão novo ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de Edição de Filme no grid de Filme na Listagem', 			'edit-Filme', 		'COMPONENT', 'Botão Editar Filme no Grid de Filme');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Filme. Permissão de acesso ao botão de edição no grid de Filme', 'Usuário Poderá ver e acessar ao botão de edicao no grid de Filme ', 'LEITURA', 'CRUD Filme , botão edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de deletar Filme no grid de Filme na Listagem', 			'remove-Filme', 	'COMPONENT', 'Botão deletar Filme no Grid de Filme');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Filme. Permissão de acesso ao botão de delete no grid de Filme', 'Usuário Poderá ver e acessar ao botão de delete no grid de Filme ', 'LEITURA', 'CRUD Filme , botão delete ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

    --telas
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de listagem de Filme', 										'app/filmes', 		'SCREEN', 'Pesquisa de  Filmes');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Filme. Permissão de acesso a tela de listagem de  Filme', 'Usuário Poderá ver e acessar a tela de listagem de  Filme ', 'LEITURA', 'CRUD Filme , tela listagem  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de Cadastro de Filme', 										'app/newFilme', 	'SCREEN', 'Cadastro  de Filmes');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Filme. Permissão de acesso a tela de cadastro de  Filme', 'Usuário Poderá ver e acessar a tela de cadastro de  Filme ', 'LEITURA', 'CRUD Filme , tela de cadastro  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de edição de Filme', 										'app/editFilme', 	'SCREEN', 'Edição de  Filmes');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Filme. Permissão de acesso a tela de edição de  Filme', 'Usuário Poderá ver e acessar a tela de edição de  Filme ', 'LEITURA', 'CRUD Filme , tela de edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	-- servicos
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Filmes', 										'crud/filmes', 		'SERVICE', 			'Servico de Filmes');  -- ler e escrever
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Filme. Permissão de acesso ao serviço de listagem de  Filme', 'Usuário Poderá acessar ao serviço de listagem de  Filme ', 'LEITURA', 'CRUD Filme , servico listar varios ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Filme. Permissão de acesso ao serviço para salvar um novo Filme', 'Usuário Poderá acessar ao serviço para salvar um novo Filme ', 'ESCRITA', 'CRUD Filme , servico salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso TODOS os Filmes', 									'crud/filmes/all', 		'SERVICE', 			'Servico de TODOS os Filmes');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Filme. Permissão de acesso ao serviço para listar todos  os Filme', 'Usuário Poderá acessar ao serviço para salvar um novo Filme ', 'LEITURA', 'CRUD Filme , servico listar todos ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Filmes por filtro', 							'crud/filmes/filter', 		'SERVICE', 			'Servico de Filmes sob filtro');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Filme. Permissão de acesso ao serviço para listagem por filtro de Filme', 'Usuário Poderá acessar ao serviço para listagem por filtro de Filme ', 'LEITURA', 'CRUD Filme , servico listar por filtro ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso a um Filme específico', 							'crud/filmes/[0-9]', 		'SERVICE', 			'Servico para acesso a Filme especifico'); --GET, PUT e DELETE 
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Filme. Permissão de acesso ao serviço para listagem de um unico Filme', 'Usuário Poderá acessar ao serviço para listagem de um unico Filme ', 'LEITURA', 'CRUD Filme , servico listar um unico ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Filme. Permissão de acesso ao serviço para atualizacao de um unico Filme', 'Usuário Poderá acessar ao serviço para atualizacao de um unico Filme ', 'ATUALIZACAO', 'CRUD Filme , servico atualização ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Filme. Permissão de acesso ao serviço para deleção/remoção de um unico Filme', 'Usuário Poderá acessar ao serviço para deleção/remoção de um unico Filme ', 'DELECAO', 'CRUD Filme , servico remoção deleção');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

-- registros de autorização para Visualização	
	-- campos de tela
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Item de menu principal para tela de pesquisa de Visualização', 			'item-list-Visualizacao',	'COMPONENT', 'Menu Visualizaçãos'					);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Visualização. Permissão de acesso ao menu de Visualização', 'Usuário Poderá ver e acessar o item de menu de Visualização ', 'LEITURA', 'CRUD Visualização , item Menu ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botôes de salvar e salvar e continuar no formulario de Visualização', 	'save-Visualizacao', 		'COMPONENT', 'Botão Salva Visualização'			);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Visualização. Permissão de acesso ao botão de salvar e salvar e continuar no formulario de Visualização', 'Usuário Poderá ver e acessar o botão de de salvar e salvar e continuar no formulario de Visualização ', 'LEITURA', 'CRUD Visualização , botão salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de novo na listagem de Visualização', 								'new-Visualizacao', 		'COMPONENT', 'Botão Novo Visualização'				);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Visualização. Permissão de acesso ao botão de novo no formulario de Visualização', 'Usuário Poderá ver e acessar ao botão de novo no formulario de Visualização ', 'LEITURA', 'CRUD Visualização , botão novo ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de Edição de Visualização no grid de Visualização na Listagem', 			'edit-Visualizacao', 		'COMPONENT', 'Botão Editar Visualização no Grid de Visualização');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Visualização. Permissão de acesso ao botão de edição no grid de Visualização', 'Usuário Poderá ver e acessar ao botão de edicao no grid de Visualização ', 'LEITURA', 'CRUD Visualização , botão edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de deletar Visualização no grid de Visualização na Listagem', 			'remove-Visualizacao', 	'COMPONENT', 'Botão deletar Visualização no Grid de Visualização');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Visualização. Permissão de acesso ao botão de delete no grid de Visualização', 'Usuário Poderá ver e acessar ao botão de delete no grid de Visualização ', 'LEITURA', 'CRUD Visualização , botão delete ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

    --telas
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de listagem de Visualização', 										'app/visualizacaos', 		'SCREEN', 'Pesquisa de  Visualizaçãos');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Visualização. Permissão de acesso a tela de listagem de  Visualização', 'Usuário Poderá ver e acessar a tela de listagem de  Visualização ', 'LEITURA', 'CRUD Visualização , tela listagem  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de Cadastro de Visualização', 										'app/newVisualizacao', 	'SCREEN', 'Cadastro  de Visualizaçãos');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Visualização. Permissão de acesso a tela de cadastro de  Visualização', 'Usuário Poderá ver e acessar a tela de cadastro de  Visualização ', 'LEITURA', 'CRUD Visualização , tela de cadastro  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de edição de Visualização', 										'app/editVisualizacao', 	'SCREEN', 'Edição de  Visualizaçãos');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Visualização. Permissão de acesso a tela de edição de  Visualização', 'Usuário Poderá ver e acessar a tela de edição de  Visualização ', 'LEITURA', 'CRUD Visualização , tela de edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	-- servicos
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Visualizaçãos', 										'crud/visualizacaos', 		'SERVICE', 			'Servico de Visualizaçãos');  -- ler e escrever
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Visualização. Permissão de acesso ao serviço de listagem de  Visualização', 'Usuário Poderá acessar ao serviço de listagem de  Visualização ', 'LEITURA', 'CRUD Visualização , servico listar varios ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Visualização. Permissão de acesso ao serviço para salvar um novo Visualização', 'Usuário Poderá acessar ao serviço para salvar um novo Visualização ', 'ESCRITA', 'CRUD Visualização , servico salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso TODOS os Visualizaçãos', 									'crud/visualizacaos/all', 		'SERVICE', 			'Servico de TODOS os Visualizaçãos');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Visualização. Permissão de acesso ao serviço para listar todos  os Visualização', 'Usuário Poderá acessar ao serviço para salvar um novo Visualização ', 'LEITURA', 'CRUD Visualização , servico listar todos ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Visualizaçãos por filtro', 							'crud/visualizacaos/filter', 		'SERVICE', 			'Servico de Visualizaçãos sob filtro');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Visualização. Permissão de acesso ao serviço para listagem por filtro de Visualização', 'Usuário Poderá acessar ao serviço para listagem por filtro de Visualização ', 'LEITURA', 'CRUD Visualização , servico listar por filtro ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso a um Visualização específico', 							'crud/visualizacaos/[0-9]', 		'SERVICE', 			'Servico para acesso a Visualização especifico'); --GET, PUT e DELETE 
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Visualização. Permissão de acesso ao serviço para listagem de um unico Visualização', 'Usuário Poderá acessar ao serviço para listagem de um unico Visualização ', 'LEITURA', 'CRUD Visualização , servico listar um unico ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Visualização. Permissão de acesso ao serviço para atualizacao de um unico Visualização', 'Usuário Poderá acessar ao serviço para atualizacao de um unico Visualização ', 'ATUALIZACAO', 'CRUD Visualização , servico atualização ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Visualização. Permissão de acesso ao serviço para deleção/remoção de um unico Visualização', 'Usuário Poderá acessar ao serviço para deleção/remoção de um unico Visualização ', 'DELECAO', 'CRUD Visualização , servico remoção deleção');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

-- registros de autorização para Classificação	
	-- campos de tela
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Item de menu principal para tela de pesquisa de Classificação', 			'item-list-Classificacao',	'COMPONENT', 'Menu Classificaçãos'					);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Classificação. Permissão de acesso ao menu de Classificação', 'Usuário Poderá ver e acessar o item de menu de Classificação ', 'LEITURA', 'CRUD Classificação , item Menu ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botôes de salvar e salvar e continuar no formulario de Classificação', 	'save-Classificacao', 		'COMPONENT', 'Botão Salva Classificação'			);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Classificação. Permissão de acesso ao botão de salvar e salvar e continuar no formulario de Classificação', 'Usuário Poderá ver e acessar o botão de de salvar e salvar e continuar no formulario de Classificação ', 'LEITURA', 'CRUD Classificação , botão salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de novo na listagem de Classificação', 								'new-Classificacao', 		'COMPONENT', 'Botão Novo Classificação'				);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Classificação. Permissão de acesso ao botão de novo no formulario de Classificação', 'Usuário Poderá ver e acessar ao botão de novo no formulario de Classificação ', 'LEITURA', 'CRUD Classificação , botão novo ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de Edição de Classificação no grid de Classificação na Listagem', 			'edit-Classificacao', 		'COMPONENT', 'Botão Editar Classificação no Grid de Classificação');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Classificação. Permissão de acesso ao botão de edição no grid de Classificação', 'Usuário Poderá ver e acessar ao botão de edicao no grid de Classificação ', 'LEITURA', 'CRUD Classificação , botão edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de deletar Classificação no grid de Classificação na Listagem', 			'remove-Classificacao', 	'COMPONENT', 'Botão deletar Classificação no Grid de Classificação');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Classificação. Permissão de acesso ao botão de delete no grid de Classificação', 'Usuário Poderá ver e acessar ao botão de delete no grid de Classificação ', 'LEITURA', 'CRUD Classificação , botão delete ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

    --telas
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de listagem de Classificação', 										'app/classificacaos', 		'SCREEN', 'Pesquisa de  Classificaçãos');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Classificação. Permissão de acesso a tela de listagem de  Classificação', 'Usuário Poderá ver e acessar a tela de listagem de  Classificação ', 'LEITURA', 'CRUD Classificação , tela listagem  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de Cadastro de Classificação', 										'app/newClassificacao', 	'SCREEN', 'Cadastro  de Classificaçãos');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Classificação. Permissão de acesso a tela de cadastro de  Classificação', 'Usuário Poderá ver e acessar a tela de cadastro de  Classificação ', 'LEITURA', 'CRUD Classificação , tela de cadastro  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de edição de Classificação', 										'app/editClassificacao', 	'SCREEN', 'Edição de  Classificaçãos');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Classificação. Permissão de acesso a tela de edição de  Classificação', 'Usuário Poderá ver e acessar a tela de edição de  Classificação ', 'LEITURA', 'CRUD Classificação , tela de edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	-- servicos
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Classificaçãos', 										'crud/classificacaos', 		'SERVICE', 			'Servico de Classificaçãos');  -- ler e escrever
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Classificação. Permissão de acesso ao serviço de listagem de  Classificação', 'Usuário Poderá acessar ao serviço de listagem de  Classificação ', 'LEITURA', 'CRUD Classificação , servico listar varios ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Classificação. Permissão de acesso ao serviço para salvar um novo Classificação', 'Usuário Poderá acessar ao serviço para salvar um novo Classificação ', 'ESCRITA', 'CRUD Classificação , servico salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso TODOS os Classificaçãos', 									'crud/classificacaos/all', 		'SERVICE', 			'Servico de TODOS os Classificaçãos');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Classificação. Permissão de acesso ao serviço para listar todos  os Classificação', 'Usuário Poderá acessar ao serviço para salvar um novo Classificação ', 'LEITURA', 'CRUD Classificação , servico listar todos ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Classificaçãos por filtro', 							'crud/classificacaos/filter', 		'SERVICE', 			'Servico de Classificaçãos sob filtro');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Classificação. Permissão de acesso ao serviço para listagem por filtro de Classificação', 'Usuário Poderá acessar ao serviço para listagem por filtro de Classificação ', 'LEITURA', 'CRUD Classificação , servico listar por filtro ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso a um Classificação específico', 							'crud/classificacaos/[0-9]', 		'SERVICE', 			'Servico para acesso a Classificação especifico'); --GET, PUT e DELETE 
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Classificação. Permissão de acesso ao serviço para listagem de um unico Classificação', 'Usuário Poderá acessar ao serviço para listagem de um unico Classificação ', 'LEITURA', 'CRUD Classificação , servico listar um unico ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Classificação. Permissão de acesso ao serviço para atualizacao de um unico Classificação', 'Usuário Poderá acessar ao serviço para atualizacao de um unico Classificação ', 'ATUALIZACAO', 'CRUD Classificação , servico atualização ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Classificação. Permissão de acesso ao serviço para deleção/remoção de um unico Classificação', 'Usuário Poderá acessar ao serviço para deleção/remoção de um unico Classificação ', 'DELECAO', 'CRUD Classificação , servico remoção deleção');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

-- registros de autorização para Ator	
	-- campos de tela
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Item de menu principal para tela de pesquisa de Ator', 			'item-list-Ator',	'COMPONENT', 'Menu Ators'					);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Ator. Permissão de acesso ao menu de Ator', 'Usuário Poderá ver e acessar o item de menu de Ator ', 'LEITURA', 'CRUD Ator , item Menu ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botôes de salvar e salvar e continuar no formulario de Ator', 	'save-Ator', 		'COMPONENT', 'Botão Salva Ator'			);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Ator. Permissão de acesso ao botão de salvar e salvar e continuar no formulario de Ator', 'Usuário Poderá ver e acessar o botão de de salvar e salvar e continuar no formulario de Ator ', 'LEITURA', 'CRUD Ator , botão salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de novo na listagem de Ator', 								'new-Ator', 		'COMPONENT', 'Botão Novo Ator'				);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Ator. Permissão de acesso ao botão de novo no formulario de Ator', 'Usuário Poderá ver e acessar ao botão de novo no formulario de Ator ', 'LEITURA', 'CRUD Ator , botão novo ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de Edição de Ator no grid de Ator na Listagem', 			'edit-Ator', 		'COMPONENT', 'Botão Editar Ator no Grid de Ator');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Ator. Permissão de acesso ao botão de edição no grid de Ator', 'Usuário Poderá ver e acessar ao botão de edicao no grid de Ator ', 'LEITURA', 'CRUD Ator , botão edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de deletar Ator no grid de Ator na Listagem', 			'remove-Ator', 	'COMPONENT', 'Botão deletar Ator no Grid de Ator');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Ator. Permissão de acesso ao botão de delete no grid de Ator', 'Usuário Poderá ver e acessar ao botão de delete no grid de Ator ', 'LEITURA', 'CRUD Ator , botão delete ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

    --telas
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de listagem de Ator', 										'app/ators', 		'SCREEN', 'Pesquisa de  Ators');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Ator. Permissão de acesso a tela de listagem de  Ator', 'Usuário Poderá ver e acessar a tela de listagem de  Ator ', 'LEITURA', 'CRUD Ator , tela listagem  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de Cadastro de Ator', 										'app/newAtor', 	'SCREEN', 'Cadastro  de Ators');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Ator. Permissão de acesso a tela de cadastro de  Ator', 'Usuário Poderá ver e acessar a tela de cadastro de  Ator ', 'LEITURA', 'CRUD Ator , tela de cadastro  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de edição de Ator', 										'app/editAtor', 	'SCREEN', 'Edição de  Ators');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Ator. Permissão de acesso a tela de edição de  Ator', 'Usuário Poderá ver e acessar a tela de edição de  Ator ', 'LEITURA', 'CRUD Ator , tela de edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	-- servicos
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Ators', 										'crud/ators', 		'SERVICE', 			'Servico de Ators');  -- ler e escrever
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Ator. Permissão de acesso ao serviço de listagem de  Ator', 'Usuário Poderá acessar ao serviço de listagem de  Ator ', 'LEITURA', 'CRUD Ator , servico listar varios ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Ator. Permissão de acesso ao serviço para salvar um novo Ator', 'Usuário Poderá acessar ao serviço para salvar um novo Ator ', 'ESCRITA', 'CRUD Ator , servico salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso TODOS os Ators', 									'crud/ators/all', 		'SERVICE', 			'Servico de TODOS os Ators');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Ator. Permissão de acesso ao serviço para listar todos  os Ator', 'Usuário Poderá acessar ao serviço para salvar um novo Ator ', 'LEITURA', 'CRUD Ator , servico listar todos ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Ators por filtro', 							'crud/ators/filter', 		'SERVICE', 			'Servico de Ators sob filtro');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Ator. Permissão de acesso ao serviço para listagem por filtro de Ator', 'Usuário Poderá acessar ao serviço para listagem por filtro de Ator ', 'LEITURA', 'CRUD Ator , servico listar por filtro ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso a um Ator específico', 							'crud/ators/[0-9]', 		'SERVICE', 			'Servico para acesso a Ator especifico'); --GET, PUT e DELETE 
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Ator. Permissão de acesso ao serviço para listagem de um unico Ator', 'Usuário Poderá acessar ao serviço para listagem de um unico Ator ', 'LEITURA', 'CRUD Ator , servico listar um unico ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Ator. Permissão de acesso ao serviço para atualizacao de um unico Ator', 'Usuário Poderá acessar ao serviço para atualizacao de um unico Ator ', 'ATUALIZACAO', 'CRUD Ator , servico atualização ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Ator. Permissão de acesso ao serviço para deleção/remoção de um unico Ator', 'Usuário Poderá acessar ao serviço para deleção/remoção de um unico Ator ', 'DELECAO', 'CRUD Ator , servico remoção deleção');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

-- registros de autorização para Usuário	
	-- campos de tela
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Item de menu principal para tela de pesquisa de Usuário', 			'item-list-User',	'COMPONENT', 'Menu Usuários'					);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Usuário. Permissão de acesso ao menu de Usuário', 'Usuário Poderá ver e acessar o item de menu de Usuário ', 'LEITURA', 'CRUD Usuário , item Menu ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botôes de salvar e salvar e continuar no formulario de Usuário', 	'save-User', 		'COMPONENT', 'Botão Salva Usuário'			);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Usuário. Permissão de acesso ao botão de salvar e salvar e continuar no formulario de Usuário', 'Usuário Poderá ver e acessar o botão de de salvar e salvar e continuar no formulario de Usuário ', 'LEITURA', 'CRUD Usuário , botão salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de novo na listagem de Usuário', 								'new-User', 		'COMPONENT', 'Botão Novo Usuário'				);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Usuário. Permissão de acesso ao botão de novo no formulario de Usuário', 'Usuário Poderá ver e acessar ao botão de novo no formulario de Usuário ', 'LEITURA', 'CRUD Usuário , botão novo ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de Edição de Usuário no grid de Usuário na Listagem', 			'edit-User', 		'COMPONENT', 'Botão Editar Usuário no Grid de Usuário');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Usuário. Permissão de acesso ao botão de edição no grid de Usuário', 'Usuário Poderá ver e acessar ao botão de edicao no grid de Usuário ', 'LEITURA', 'CRUD Usuário , botão edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de deletar Usuário no grid de Usuário na Listagem', 			'remove-User', 	'COMPONENT', 'Botão deletar Usuário no Grid de Usuário');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Usuário. Permissão de acesso ao botão de delete no grid de Usuário', 'Usuário Poderá ver e acessar ao botão de delete no grid de Usuário ', 'LEITURA', 'CRUD Usuário , botão delete ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

    --telas
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de listagem de Usuário', 										'app/users', 		'SCREEN', 'Pesquisa de  Usuários');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Usuário. Permissão de acesso a tela de listagem de  Usuário', 'Usuário Poderá ver e acessar a tela de listagem de  Usuário ', 'LEITURA', 'CRUD Usuário , tela listagem  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de Cadastro de Usuário', 										'app/newUser', 	'SCREEN', 'Cadastro  de Usuários');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Usuário. Permissão de acesso a tela de cadastro de  Usuário', 'Usuário Poderá ver e acessar a tela de cadastro de  Usuário ', 'LEITURA', 'CRUD Usuário , tela de cadastro  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de edição de Usuário', 										'app/editUser', 	'SCREEN', 'Edição de  Usuários');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Usuário. Permissão de acesso a tela de edição de  Usuário', 'Usuário Poderá ver e acessar a tela de edição de  Usuário ', 'LEITURA', 'CRUD Usuário , tela de edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	-- servicos
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Usuários', 										'crud/users', 		'SERVICE', 			'Servico de Usuários');  -- ler e escrever
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Usuário. Permissão de acesso ao serviço de listagem de  Usuário', 'Usuário Poderá acessar ao serviço de listagem de  Usuário ', 'LEITURA', 'CRUD Usuário , servico listar varios ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Usuário. Permissão de acesso ao serviço para salvar um novo Usuário', 'Usuário Poderá acessar ao serviço para salvar um novo Usuário ', 'ESCRITA', 'CRUD Usuário , servico salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso TODOS os Usuários', 									'crud/users/all', 		'SERVICE', 			'Servico de TODOS os Usuários');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Usuário. Permissão de acesso ao serviço para listar todos  os Usuário', 'Usuário Poderá acessar ao serviço para salvar um novo Usuário ', 'LEITURA', 'CRUD Usuário , servico listar todos ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Usuários por filtro', 							'crud/users/filter', 		'SERVICE', 			'Servico de Usuários sob filtro');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Usuário. Permissão de acesso ao serviço para listagem por filtro de Usuário', 'Usuário Poderá acessar ao serviço para listagem por filtro de Usuário ', 'LEITURA', 'CRUD Usuário , servico listar por filtro ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso a um Usuário específico', 							'crud/users/[0-9]', 		'SERVICE', 			'Servico para acesso a Usuário especifico'); --GET, PUT e DELETE 
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Usuário. Permissão de acesso ao serviço para listagem de um unico Usuário', 'Usuário Poderá acessar ao serviço para listagem de um unico Usuário ', 'LEITURA', 'CRUD Usuário , servico listar um unico ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Usuário. Permissão de acesso ao serviço para atualizacao de um unico Usuário', 'Usuário Poderá acessar ao serviço para atualizacao de um unico Usuário ', 'ATUALIZACAO', 'CRUD Usuário , servico atualização ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Usuário. Permissão de acesso ao serviço para deleção/remoção de um unico Usuário', 'Usuário Poderá acessar ao serviço para deleção/remoção de um unico Usuário ', 'DELECAO', 'CRUD Usuário , servico remoção deleção');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

-- registros de autorização para Papel	
	-- campos de tela
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Item de menu principal para tela de pesquisa de Papel', 			'item-list-Role',	'COMPONENT', 'Menu Papels'					);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Papel. Permissão de acesso ao menu de Papel', 'Usuário Poderá ver e acessar o item de menu de Papel ', 'LEITURA', 'CRUD Papel , item Menu ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botôes de salvar e salvar e continuar no formulario de Papel', 	'save-Role', 		'COMPONENT', 'Botão Salva Papel'			);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Papel. Permissão de acesso ao botão de salvar e salvar e continuar no formulario de Papel', 'Usuário Poderá ver e acessar o botão de de salvar e salvar e continuar no formulario de Papel ', 'LEITURA', 'CRUD Papel , botão salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de novo na listagem de Papel', 								'new-Role', 		'COMPONENT', 'Botão Novo Papel'				);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Papel. Permissão de acesso ao botão de novo no formulario de Papel', 'Usuário Poderá ver e acessar ao botão de novo no formulario de Papel ', 'LEITURA', 'CRUD Papel , botão novo ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de Edição de Papel no grid de Papel na Listagem', 			'edit-Role', 		'COMPONENT', 'Botão Editar Papel no Grid de Papel');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Papel. Permissão de acesso ao botão de edição no grid de Papel', 'Usuário Poderá ver e acessar ao botão de edicao no grid de Papel ', 'LEITURA', 'CRUD Papel , botão edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de deletar Papel no grid de Papel na Listagem', 			'remove-Role', 	'COMPONENT', 'Botão deletar Papel no Grid de Papel');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Papel. Permissão de acesso ao botão de delete no grid de Papel', 'Usuário Poderá ver e acessar ao botão de delete no grid de Papel ', 'LEITURA', 'CRUD Papel , botão delete ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

    --telas
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de listagem de Papel', 										'app/roles', 		'SCREEN', 'Pesquisa de  Papels');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Papel. Permissão de acesso a tela de listagem de  Papel', 'Usuário Poderá ver e acessar a tela de listagem de  Papel ', 'LEITURA', 'CRUD Papel , tela listagem  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de Cadastro de Papel', 										'app/newRole', 	'SCREEN', 'Cadastro  de Papels');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Papel. Permissão de acesso a tela de cadastro de  Papel', 'Usuário Poderá ver e acessar a tela de cadastro de  Papel ', 'LEITURA', 'CRUD Papel , tela de cadastro  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de edição de Papel', 										'app/editRole', 	'SCREEN', 'Edição de  Papels');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Papel. Permissão de acesso a tela de edição de  Papel', 'Usuário Poderá ver e acessar a tela de edição de  Papel ', 'LEITURA', 'CRUD Papel , tela de edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	-- servicos
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Papels', 										'crud/roles', 		'SERVICE', 			'Servico de Papels');  -- ler e escrever
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Papel. Permissão de acesso ao serviço de listagem de  Papel', 'Usuário Poderá acessar ao serviço de listagem de  Papel ', 'LEITURA', 'CRUD Papel , servico listar varios ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Papel. Permissão de acesso ao serviço para salvar um novo Papel', 'Usuário Poderá acessar ao serviço para salvar um novo Papel ', 'ESCRITA', 'CRUD Papel , servico salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso TODOS os Papels', 									'crud/roles/all', 		'SERVICE', 			'Servico de TODOS os Papels');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Papel. Permissão de acesso ao serviço para listar todos  os Papel', 'Usuário Poderá acessar ao serviço para salvar um novo Papel ', 'LEITURA', 'CRUD Papel , servico listar todos ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Papels por filtro', 							'crud/roles/filter', 		'SERVICE', 			'Servico de Papels sob filtro');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Papel. Permissão de acesso ao serviço para listagem por filtro de Papel', 'Usuário Poderá acessar ao serviço para listagem por filtro de Papel ', 'LEITURA', 'CRUD Papel , servico listar por filtro ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso a um Papel específico', 							'crud/roles/[0-9]', 		'SERVICE', 			'Servico para acesso a Papel especifico'); --GET, PUT e DELETE 
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Papel. Permissão de acesso ao serviço para listagem de um unico Papel', 'Usuário Poderá acessar ao serviço para listagem de um unico Papel ', 'LEITURA', 'CRUD Papel , servico listar um unico ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Papel. Permissão de acesso ao serviço para atualizacao de um unico Papel', 'Usuário Poderá acessar ao serviço para atualizacao de um unico Papel ', 'ATUALIZACAO', 'CRUD Papel , servico atualização ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Papel. Permissão de acesso ao serviço para deleção/remoção de um unico Papel', 'Usuário Poderá acessar ao serviço para deleção/remoção de um unico Papel ', 'DELECAO', 'CRUD Papel , servico remoção deleção');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

-- registros de autorização para Permissão	
	-- campos de tela
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Item de menu principal para tela de pesquisa de Permissão', 			'item-list-Permission',	'COMPONENT', 'Menu Permissãos'					);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Permissão. Permissão de acesso ao menu de Permissão', 'Usuário Poderá ver e acessar o item de menu de Permissão ', 'LEITURA', 'CRUD Permissão , item Menu ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botôes de salvar e salvar e continuar no formulario de Permissão', 	'save-Permission', 		'COMPONENT', 'Botão Salva Permissão'			);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Permissão. Permissão de acesso ao botão de salvar e salvar e continuar no formulario de Permissão', 'Usuário Poderá ver e acessar o botão de de salvar e salvar e continuar no formulario de Permissão ', 'LEITURA', 'CRUD Permissão , botão salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de novo na listagem de Permissão', 								'new-Permission', 		'COMPONENT', 'Botão Novo Permissão'				);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Permissão. Permissão de acesso ao botão de novo no formulario de Permissão', 'Usuário Poderá ver e acessar ao botão de novo no formulario de Permissão ', 'LEITURA', 'CRUD Permissão , botão novo ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de Edição de Permissão no grid de Permissão na Listagem', 			'edit-Permission', 		'COMPONENT', 'Botão Editar Permissão no Grid de Permissão');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Permissão. Permissão de acesso ao botão de edição no grid de Permissão', 'Usuário Poderá ver e acessar ao botão de edicao no grid de Permissão ', 'LEITURA', 'CRUD Permissão , botão edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de deletar Permissão no grid de Permissão na Listagem', 			'remove-Permission', 	'COMPONENT', 'Botão deletar Permissão no Grid de Permissão');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Permissão. Permissão de acesso ao botão de delete no grid de Permissão', 'Usuário Poderá ver e acessar ao botão de delete no grid de Permissão ', 'LEITURA', 'CRUD Permissão , botão delete ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

    --telas
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de listagem de Permissão', 										'app/permissions', 		'SCREEN', 'Pesquisa de  Permissãos');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Permissão. Permissão de acesso a tela de listagem de  Permissão', 'Usuário Poderá ver e acessar a tela de listagem de  Permissão ', 'LEITURA', 'CRUD Permissão , tela listagem  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de Cadastro de Permissão', 										'app/newPermission', 	'SCREEN', 'Cadastro  de Permissãos');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Permissão. Permissão de acesso a tela de cadastro de  Permissão', 'Usuário Poderá ver e acessar a tela de cadastro de  Permissão ', 'LEITURA', 'CRUD Permissão , tela de cadastro  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de edição de Permissão', 										'app/editPermission', 	'SCREEN', 'Edição de  Permissãos');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Permissão. Permissão de acesso a tela de edição de  Permissão', 'Usuário Poderá ver e acessar a tela de edição de  Permissão ', 'LEITURA', 'CRUD Permissão , tela de edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	-- servicos
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Permissãos', 										'crud/permissions', 		'SERVICE', 			'Servico de Permissãos');  -- ler e escrever
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Permissão. Permissão de acesso ao serviço de listagem de  Permissão', 'Usuário Poderá acessar ao serviço de listagem de  Permissão ', 'LEITURA', 'CRUD Permissão , servico listar varios ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Permissão. Permissão de acesso ao serviço para salvar um novo Permissão', 'Usuário Poderá acessar ao serviço para salvar um novo Permissão ', 'ESCRITA', 'CRUD Permissão , servico salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso TODOS os Permissãos', 									'crud/permissions/all', 		'SERVICE', 			'Servico de TODOS os Permissãos');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Permissão. Permissão de acesso ao serviço para listar todos  os Permissão', 'Usuário Poderá acessar ao serviço para salvar um novo Permissão ', 'LEITURA', 'CRUD Permissão , servico listar todos ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Permissãos por filtro', 							'crud/permissions/filter', 		'SERVICE', 			'Servico de Permissãos sob filtro');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Permissão. Permissão de acesso ao serviço para listagem por filtro de Permissão', 'Usuário Poderá acessar ao serviço para listagem por filtro de Permissão ', 'LEITURA', 'CRUD Permissão , servico listar por filtro ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso a um Permissão específico', 							'crud/permissions/[0-9]', 		'SERVICE', 			'Servico para acesso a Permissão especifico'); --GET, PUT e DELETE 
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Permissão. Permissão de acesso ao serviço para listagem de um unico Permissão', 'Usuário Poderá acessar ao serviço para listagem de um unico Permissão ', 'LEITURA', 'CRUD Permissão , servico listar um unico ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Permissão. Permissão de acesso ao serviço para atualizacao de um unico Permissão', 'Usuário Poderá acessar ao serviço para atualizacao de um unico Permissão ', 'ATUALIZACAO', 'CRUD Permissão , servico atualização ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Permissão. Permissão de acesso ao serviço para deleção/remoção de um unico Permissão', 'Usuário Poderá acessar ao serviço para deleção/remoção de um unico Permissão ', 'DELECAO', 'CRUD Permissão , servico remoção deleção');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

-- registros de autorização para Grupo de Permissões	
	-- campos de tela
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Item de menu principal para tela de pesquisa de Grupo de Permissões', 			'item-list-Group',	'COMPONENT', 'Menu Grupo de Permissõess'					);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Grupo de Permissões. Permissão de acesso ao menu de Grupo de Permissões', 'Usuário Poderá ver e acessar o item de menu de Grupo de Permissões ', 'LEITURA', 'CRUD Grupo de Permissões , item Menu ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botôes de salvar e salvar e continuar no formulario de Grupo de Permissões', 	'save-Group', 		'COMPONENT', 'Botão Salva Grupo de Permissões'			);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Grupo de Permissões. Permissão de acesso ao botão de salvar e salvar e continuar no formulario de Grupo de Permissões', 'Usuário Poderá ver e acessar o botão de de salvar e salvar e continuar no formulario de Grupo de Permissões ', 'LEITURA', 'CRUD Grupo de Permissões , botão salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de novo na listagem de Grupo de Permissões', 								'new-Group', 		'COMPONENT', 'Botão Novo Grupo de Permissões'				);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Grupo de Permissões. Permissão de acesso ao botão de novo no formulario de Grupo de Permissões', 'Usuário Poderá ver e acessar ao botão de novo no formulario de Grupo de Permissões ', 'LEITURA', 'CRUD Grupo de Permissões , botão novo ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de Edição de Grupo de Permissões no grid de Grupo de Permissões na Listagem', 			'edit-Group', 		'COMPONENT', 'Botão Editar Grupo de Permissões no Grid de Grupo de Permissões');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Grupo de Permissões. Permissão de acesso ao botão de edição no grid de Grupo de Permissões', 'Usuário Poderá ver e acessar ao botão de edicao no grid de Grupo de Permissões ', 'LEITURA', 'CRUD Grupo de Permissões , botão edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de deletar Grupo de Permissões no grid de Grupo de Permissões na Listagem', 			'remove-Group', 	'COMPONENT', 'Botão deletar Grupo de Permissões no Grid de Grupo de Permissões');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Grupo de Permissões. Permissão de acesso ao botão de delete no grid de Grupo de Permissões', 'Usuário Poderá ver e acessar ao botão de delete no grid de Grupo de Permissões ', 'LEITURA', 'CRUD Grupo de Permissões , botão delete ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

    --telas
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de listagem de Grupo de Permissões', 										'app/groups', 		'SCREEN', 'Pesquisa de  Grupo de Permissõess');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Grupo de Permissões. Permissão de acesso a tela de listagem de  Grupo de Permissões', 'Usuário Poderá ver e acessar a tela de listagem de  Grupo de Permissões ', 'LEITURA', 'CRUD Grupo de Permissões , tela listagem  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de Cadastro de Grupo de Permissões', 										'app/newGroup', 	'SCREEN', 'Cadastro  de Grupo de Permissõess');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Grupo de Permissões. Permissão de acesso a tela de cadastro de  Grupo de Permissões', 'Usuário Poderá ver e acessar a tela de cadastro de  Grupo de Permissões ', 'LEITURA', 'CRUD Grupo de Permissões , tela de cadastro  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de edição de Grupo de Permissões', 										'app/editGroup', 	'SCREEN', 'Edição de  Grupo de Permissõess');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Grupo de Permissões. Permissão de acesso a tela de edição de  Grupo de Permissões', 'Usuário Poderá ver e acessar a tela de edição de  Grupo de Permissões ', 'LEITURA', 'CRUD Grupo de Permissões , tela de edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	-- servicos
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Grupo de Permissõess', 										'crud/groups', 		'SERVICE', 			'Servico de Grupo de Permissõess');  -- ler e escrever
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Grupo de Permissões. Permissão de acesso ao serviço de listagem de  Grupo de Permissões', 'Usuário Poderá acessar ao serviço de listagem de  Grupo de Permissões ', 'LEITURA', 'CRUD Grupo de Permissões , servico listar varios ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Grupo de Permissões. Permissão de acesso ao serviço para salvar um novo Grupo de Permissões', 'Usuário Poderá acessar ao serviço para salvar um novo Grupo de Permissões ', 'ESCRITA', 'CRUD Grupo de Permissões , servico salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso TODOS os Grupo de Permissõess', 									'crud/groups/all', 		'SERVICE', 			'Servico de TODOS os Grupo de Permissõess');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Grupo de Permissões. Permissão de acesso ao serviço para listar todos  os Grupo de Permissões', 'Usuário Poderá acessar ao serviço para salvar um novo Grupo de Permissões ', 'LEITURA', 'CRUD Grupo de Permissões , servico listar todos ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Grupo de Permissõess por filtro', 							'crud/groups/filter', 		'SERVICE', 			'Servico de Grupo de Permissõess sob filtro');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Grupo de Permissões. Permissão de acesso ao serviço para listagem por filtro de Grupo de Permissões', 'Usuário Poderá acessar ao serviço para listagem por filtro de Grupo de Permissões ', 'LEITURA', 'CRUD Grupo de Permissões , servico listar por filtro ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso a um Grupo de Permissões específico', 							'crud/groups/[0-9]', 		'SERVICE', 			'Servico para acesso a Grupo de Permissões especifico'); --GET, PUT e DELETE 
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Grupo de Permissões. Permissão de acesso ao serviço para listagem de um unico Grupo de Permissões', 'Usuário Poderá acessar ao serviço para listagem de um unico Grupo de Permissões ', 'LEITURA', 'CRUD Grupo de Permissões , servico listar um unico ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Grupo de Permissões. Permissão de acesso ao serviço para atualizacao de um unico Grupo de Permissões', 'Usuário Poderá acessar ao serviço para atualizacao de um unico Grupo de Permissões ', 'ATUALIZACAO', 'CRUD Grupo de Permissões , servico atualização ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Grupo de Permissões. Permissão de acesso ao serviço para deleção/remoção de um unico Grupo de Permissões', 'Usuário Poderá acessar ao serviço para deleção/remoção de um unico Grupo de Permissões ', 'DELECAO', 'CRUD Grupo de Permissões , servico remoção deleção');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

-- registros de autorização para Item	
	-- campos de tela
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Item de menu principal para tela de pesquisa de Item', 			'item-list-Item',	'COMPONENT', 'Menu Items'					);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Item. Permissão de acesso ao menu de Item', 'Usuário Poderá ver e acessar o item de menu de Item ', 'LEITURA', 'CRUD Item , item Menu ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botôes de salvar e salvar e continuar no formulario de Item', 	'save-Item', 		'COMPONENT', 'Botão Salva Item'			);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Item. Permissão de acesso ao botão de salvar e salvar e continuar no formulario de Item', 'Usuário Poderá ver e acessar o botão de de salvar e salvar e continuar no formulario de Item ', 'LEITURA', 'CRUD Item , botão salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de novo na listagem de Item', 								'new-Item', 		'COMPONENT', 'Botão Novo Item'				);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Item. Permissão de acesso ao botão de novo no formulario de Item', 'Usuário Poderá ver e acessar ao botão de novo no formulario de Item ', 'LEITURA', 'CRUD Item , botão novo ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de Edição de Item no grid de Item na Listagem', 			'edit-Item', 		'COMPONENT', 'Botão Editar Item no Grid de Item');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Item. Permissão de acesso ao botão de edição no grid de Item', 'Usuário Poderá ver e acessar ao botão de edicao no grid de Item ', 'LEITURA', 'CRUD Item , botão edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de deletar Item no grid de Item na Listagem', 			'remove-Item', 	'COMPONENT', 'Botão deletar Item no Grid de Item');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Item. Permissão de acesso ao botão de delete no grid de Item', 'Usuário Poderá ver e acessar ao botão de delete no grid de Item ', 'LEITURA', 'CRUD Item , botão delete ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

    --telas
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de listagem de Item', 										'app/items', 		'SCREEN', 'Pesquisa de  Items');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Item. Permissão de acesso a tela de listagem de  Item', 'Usuário Poderá ver e acessar a tela de listagem de  Item ', 'LEITURA', 'CRUD Item , tela listagem  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de Cadastro de Item', 										'app/newItem', 	'SCREEN', 'Cadastro  de Items');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Item. Permissão de acesso a tela de cadastro de  Item', 'Usuário Poderá ver e acessar a tela de cadastro de  Item ', 'LEITURA', 'CRUD Item , tela de cadastro  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de edição de Item', 										'app/editItem', 	'SCREEN', 'Edição de  Items');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Item. Permissão de acesso a tela de edição de  Item', 'Usuário Poderá ver e acessar a tela de edição de  Item ', 'LEITURA', 'CRUD Item , tela de edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	-- servicos
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Items', 										'crud/items', 		'SERVICE', 			'Servico de Items');  -- ler e escrever
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Item. Permissão de acesso ao serviço de listagem de  Item', 'Usuário Poderá acessar ao serviço de listagem de  Item ', 'LEITURA', 'CRUD Item , servico listar varios ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Item. Permissão de acesso ao serviço para salvar um novo Item', 'Usuário Poderá acessar ao serviço para salvar um novo Item ', 'ESCRITA', 'CRUD Item , servico salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso TODOS os Items', 									'crud/items/all', 		'SERVICE', 			'Servico de TODOS os Items');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Item. Permissão de acesso ao serviço para listar todos  os Item', 'Usuário Poderá acessar ao serviço para salvar um novo Item ', 'LEITURA', 'CRUD Item , servico listar todos ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Items por filtro', 							'crud/items/filter', 		'SERVICE', 			'Servico de Items sob filtro');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Item. Permissão de acesso ao serviço para listagem por filtro de Item', 'Usuário Poderá acessar ao serviço para listagem por filtro de Item ', 'LEITURA', 'CRUD Item , servico listar por filtro ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso a um Item específico', 							'crud/items/[0-9]', 		'SERVICE', 			'Servico para acesso a Item especifico'); --GET, PUT e DELETE 
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Item. Permissão de acesso ao serviço para listagem de um unico Item', 'Usuário Poderá acessar ao serviço para listagem de um unico Item ', 'LEITURA', 'CRUD Item , servico listar um unico ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Item. Permissão de acesso ao serviço para atualizacao de um unico Item', 'Usuário Poderá acessar ao serviço para atualizacao de um unico Item ', 'ATUALIZACAO', 'CRUD Item , servico atualização ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Item. Permissão de acesso ao serviço para deleção/remoção de um unico Item', 'Usuário Poderá acessar ao serviço para deleção/remoção de um unico Item ', 'DELECAO', 'CRUD Item , servico remoção deleção');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	
import LinguagemController from './presentation/http/controllers/LinguagemController';
import AvaliacaoController from './presentation/http/controllers/AvaliacaoController';
import AssinanteController from './presentation/http/controllers/AssinanteController';
import GeneroController from './presentation/http/controllers/GeneroController';
import CriticoController from './presentation/http/controllers/CriticoController';
import FilmeController from './presentation/http/controllers/FilmeController';
import VisualizacaoController from './presentation/http/controllers/VisualizacaoController';
import ClassificacaoController from './presentation/http/controllers/ClassificacaoController';
import AtorController from './presentation/http/controllers/AtorController';
import UserController from './presentation/http/controllers/UserController';
import RoleController from './presentation/http/controllers/RoleController';
import PermissionController from './presentation/http/controllers/PermissionController';
import GroupController from './presentation/http/controllers/GroupController';
import ItemController from './presentation/http/controllers/ItemController';
appExpress.use('/linguagems', LinguagemController)
appExpress.use('/avaliacaos', AvaliacaoController)
appExpress.use('/assinantes', AssinanteController)
appExpress.use('/generos', GeneroController)
appExpress.use('/criticos', CriticoController)
appExpress.use('/filmes', FilmeController)
appExpress.use('/visualizacaos', VisualizacaoController)
appExpress.use('/classificacaos', ClassificacaoController)
appExpress.use('/ators', AtorController)
appExpress.use('/users', UserController)
appExpress.use('/roles', RoleController)
appExpress.use('/permissions', PermissionController)
appExpress.use('/groups', GroupController)
appExpress.use('/items', ItemController)

