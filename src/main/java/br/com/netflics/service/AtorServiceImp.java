/* generated by JSetup v0.95 :  at 23 de jun de 2021 23:11:06 */
package br.com.netflics.service;

import java.util.Optional;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import br.com.netflics.core.model.Tenant ;

import br.com.netflics.model.Ator;
import br.com.netflics.persistence.AtorRepository;
import br.com.netflics.persistence.AtorSpecificationHelper;
import br.com.netflics.model.filter.FilterAtor;

import br.com.netflics.core.persistence.pagination.Pager;
import br.com.netflics.core.rs.exception.ValidationException;
import br.com.netflics.core.persistence.pagination.SearchParameters;
import br.com.netflics.core.utils.DateUtil;
import br.com.netflics.core.utils.Util;

@Service
@Transactional
public class AtorServiceImp implements AtorService {

	public static final Logger LOGGER = LoggerFactory.getLogger(AtorServiceImp.class);
	
	@Autowired
	AtorRepository atorRepository;
	
	public Optional<Ator> get(Integer id, Tenant tenant) {
		return atorRepository.findOne(AtorSpecificationHelper.fromId(id, tenant));
	}

	public Pager<Ator> get(SearchParameters<FilterAtor> searchParams, Tenant tenant) {
		Pageable pageRequest = searchParams.getPageRequest();

		Page<Ator> page = atorRepository.findAll(AtorSpecificationHelper.filter(searchParams, tenant), pageRequest);

		return new Pager<Ator>(page.getContent(), searchParams.getPage(), searchParams.getPageSize(),
		        searchParams.getOrder(), searchParams.getOrderBy(), page.getTotalElements());
	}

	public Boolean delete(Integer id, Tenant tenant) {
		Optional<Ator> optional = this.get(id, tenant);
		if (optional.isPresent()) {
			atorRepository.delete(optional.get());
		}
		return true;
	}

	public Ator save(Ator entity) {
		return atorRepository.save(entity);
	}

	public Ator update(Ator entity) {
		return atorRepository.save(entity);
	}
}

//generated by JSetup v0.95 :  at 23 de jun de 2021 23:11:06